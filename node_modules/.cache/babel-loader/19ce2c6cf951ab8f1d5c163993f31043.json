{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zacha\\\\Desktop\\\\opencode-frontend\\\\src\\\\components\\\\ResetPasswordForm.js\";\nimport React from \"react\";\nimport \"./ResetPassword.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class ResetPasswordSearchForm extends React.Component {\n  async componentDidMount() {\n    //Since we are using a button outside of the form to handle the login attempt\n    //let's listen to the username and password input fields for if the user\n    //presses the enter key, and if so we can simulate a button click\n    var passwordInput = document.getElementById('password');\n    passwordInput.addEventListener('keyup', function onEvent(e) {\n      if (e.code === \"Enter\") {\n        document.getElementById('submit-button').click();\n      }\n    }); //Change the size of some elements to be proportional to the screen\n\n    var requestForm = document.getElementById('request-form');\n    var requestSuccessTextField = document.getElementById('request-success-text-field');\n    requestForm.style.width = window.innerWidth / 8 + \"px\";\n    requestForm.style.height = window.innerHeight / 4 + \"px\";\n    requestSuccessTextField.style.width = window.innerWidth / 6 + \"px\"; //Move the request-div to the center of the screen once the width and height have been rendered\n\n    var requestDiv = document.getElementById('request-div');\n    requestDiv.style.marginTop = \"-\" + requestDiv.offsetHeight / 2 + \"px\";\n    requestDiv.style.marginLeft = \"-\" + requestDiv.offsetWidth / 2 + \"px\";\n  }\n\n  render() {\n    function requestHandler() {\n      //Get the search params\n      const query = window.location.search;\n      const urlParameters = new URLSearchParams(query);\n      const token = urlParameters.get('token');\n      var nonMatchingPasswordMessage = document.getElementById('nonmatching-password-message');\n      var noPasswordMessage = document.getElementById('nonmatching-password-message');\n      var noConfirmationPasswordMessage = document.getElementById('nonmatching-password-message');\n      var password = window.document.getElementById('password').value;\n      var confirmationPassword = window.document.getElementById('confirm-password').value;\n      var request = {\n        \"token\": token,\n        \"password\": password\n      }; //Reset when user attempts login\n\n      nonMatchingPasswordMessage.hidden = true;\n      noPasswordMessage.hidden = true;\n      noConfirmationPasswordMessage.hidden = true;\n      console.log(password);\n      console.log(confirmationPassword); //If the user enters nothing, do nothing\n\n      if (password === \"\") {\n        noPasswordMessage.hidden = false;\n        return;\n      } //If the user enters nothing, do nothing\n\n\n      if (confirmationPassword === \"\") {\n        noConfirmationPasswordMessage.hidden = false;\n        return;\n      } //If the user enters nothing, do nothing\n\n\n      if (password != confirmationPassword) {\n        nonMatchingPasswordMessage.hidden = false;\n        return;\n      }\n\n      fetch('http://localhost:8080/api/v1/password-reset/confirm', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(request)\n      }).then(response => response.text().then(function (text) {\n        var requestSuccessDiv = document.getElementById('request-success-div');\n        document.getElementById('request-success-text-field').innerHTML = text;\n        document.getElementById('request-div').hidden = true;\n        requestSuccessDiv.hidden = false; //Move the request-success-div to the center of the screen once the width and height have been rendered\n\n        requestSuccessDiv.style.marginTop = \"-\" + requestSuccessDiv.offsetHeight / 2 + \"px\";\n        requestSuccessDiv.style.marginLeft = \"-\" + requestSuccessDiv.offsetWidth / 2 + \"px\";\n      }));\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"request-div\",\n        className: \"request-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            color: \"white\"\n          },\n          children: \"New password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"nonmatching-password-message-div\",\n          style: {\n            height: \"100px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            id: \"nonmatching-password-message\",\n            hidden: \"true\",\n            style: {\n              color: \"red\"\n            },\n            children: \"Your passwords do not match\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            id: \"no-password-message\",\n            hidden: \"true\",\n            style: {\n              color: \"red\"\n            },\n            children: \"You must enter a password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            id: \"no-confirmation-password-message\",\n            hidden: \"true\",\n            style: {\n              color: \"red\"\n            },\n            children: \"You must enter a confirmation password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"request-form\",\n          className: \"request-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"password\",\n            children: \"New password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 64\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: \"20px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            placeholder: \"Type your password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 108\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: \"20px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"confirm-password\",\n            children: \"Confirm password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 76\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: \"20px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"confirm-password\",\n            name: \"confirm-password\",\n            placeholder: \"Confirm your password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 127\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-button\",\n          id: \"submit-button\",\n          onClick: () => requestHandler(),\n          children: \"SUBMIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"request-success-div\",\n        className: \"request-div\",\n        hidden: \"true\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"request-success-text-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Zacha/Desktop/opencode-frontend/src/components/ResetPasswordForm.js"],"names":["React","ResetPasswordSearchForm","Component","componentDidMount","passwordInput","document","getElementById","addEventListener","onEvent","e","code","click","requestForm","requestSuccessTextField","style","width","window","innerWidth","height","innerHeight","requestDiv","marginTop","offsetHeight","marginLeft","offsetWidth","render","requestHandler","query","location","search","urlParameters","URLSearchParams","token","get","nonMatchingPasswordMessage","noPasswordMessage","noConfirmationPasswordMessage","password","value","confirmationPassword","request","hidden","console","log","fetch","method","headers","body","JSON","stringify","then","response","text","requestSuccessDiv","innerHTML","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./ResetPassword.css\";\n\nexport default class ResetPasswordSearchForm extends React.Component {\n    async componentDidMount() {\n        //Since we are using a button outside of the form to handle the login attempt\n        //let's listen to the username and password input fields for if the user\n        //presses the enter key, and if so we can simulate a button click\n        var passwordInput = document.getElementById('password')\n\n        passwordInput.addEventListener('keyup', function onEvent(e) {\n            if(e.code === \"Enter\") {\n                document.getElementById('submit-button').click()\n            }\n        })\n\n        //Change the size of some elements to be proportional to the screen\n        var requestForm = document.getElementById('request-form')\n        var requestSuccessTextField = document.getElementById('request-success-text-field')\n\n        requestForm.style.width = (window.innerWidth / 8) + \"px\";\n        requestForm.style.height = (window.innerHeight / 4) + \"px\";\n        requestSuccessTextField.style.width = (window.innerWidth / 6) + \"px\";\n\n        //Move the request-div to the center of the screen once the width and height have been rendered\n        var requestDiv = document.getElementById('request-div')\n\n        requestDiv.style.marginTop = \"-\" + requestDiv.offsetHeight / 2 + \"px\"\n        requestDiv.style.marginLeft = \"-\" + requestDiv.offsetWidth / 2 + \"px\"\n    }\n\n    render() {\n        function requestHandler() {\n            //Get the search params\n            const query = window.location.search\n            const urlParameters = new URLSearchParams(query)\n            const token = urlParameters.get('token')\n\n            var nonMatchingPasswordMessage = document.getElementById('nonmatching-password-message')\n            var noPasswordMessage = document.getElementById('nonmatching-password-message')\n            var noConfirmationPasswordMessage = document.getElementById('nonmatching-password-message')\n            var password = window.document.getElementById('password').value\n            var confirmationPassword = window.document.getElementById('confirm-password').value\n            var request = {\"token\": token, \"password\": password}\n\n            //Reset when user attempts login\n            nonMatchingPasswordMessage.hidden = true\n            noPasswordMessage.hidden = true\n            noConfirmationPasswordMessage.hidden = true\n\n            console.log(password)\n            console.log(confirmationPassword)\n\n            //If the user enters nothing, do nothing\n            if(password === \"\") {\n                noPasswordMessage.hidden = false\n                return\n            }\n            //If the user enters nothing, do nothing\n            if(confirmationPassword === \"\") {\n                noConfirmationPasswordMessage.hidden = false\n                return\n            }\n            //If the user enters nothing, do nothing\n            if(password != confirmationPassword) {\n                nonMatchingPasswordMessage.hidden = false\n                return\n            }\n\n            fetch('http://localhost:8080/api/v1/password-reset/confirm', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(request)\n                }).then(response => response.text().then(\n                    function (text) {\n                            var requestSuccessDiv = document.getElementById('request-success-div')\n                            document.getElementById('request-success-text-field').innerHTML = text\n                            document.getElementById('request-div').hidden = true\n                            requestSuccessDiv.hidden = false\n\n                            //Move the request-success-div to the center of the screen once the width and height have been rendered\n                            requestSuccessDiv.style.marginTop = \"-\" + requestSuccessDiv.offsetHeight / 2 + \"px\"\n                            requestSuccessDiv.style.marginLeft = \"-\" + requestSuccessDiv.offsetWidth / 2 + \"px\"\n                    }\n                ))\n        }\n\n        return(\n            <>\n            <div id=\"request-div\" className=\"request-div\">\n                <h1 style={{color: \"white\"}}>New password</h1>\n                <div id=\"nonmatching-password-message-div\" style={{height: \"100px\"}} >\n                    <b id=\"nonmatching-password-message\" hidden=\"true\" style={{color: \"red\"}}>Your passwords do not match</b>\n                    <b id=\"no-password-message\" hidden=\"true\" style={{color: \"red\"}}>You must enter a password</b>\n                    <b id=\"no-confirmation-password-message\" hidden=\"true\" style={{color: \"red\"}}>You must enter a confirmation password</b>\n                </div>\n                <form id=\"request-form\" className=\"request-form\">\n                    <label for=\"password\">New password:</label><br />\n                    <div style={{height: \"20px\"}} />\n                    <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Type your password\"/><hr />\n                    <div style={{height: \"20px\"}} />\n\n                    <label for=\"confirm-password\">Confirm password:</label><br />\n                    <div style={{height: \"20px\"}} />\n                    <input type=\"password\" id=\"confirm-password\" name=\"confirm-password\" placeholder=\"Confirm your password\"/><hr />\n                </form>\n                <button className=\"submit-button\" id='submit-button' onClick={() => requestHandler()}>SUBMIT</button>\n            </div>\n            <div id=\"request-success-div\" className=\"request-div\" hidden=\"true\">\n                <p id=\"request-success-text-field\"></p>\n            </div>\n            </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}