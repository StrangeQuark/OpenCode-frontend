{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zacha\\\\Desktop\\\\opencode-frontend\\\\src\\\\UserProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport QuestionsList from './components/QuestionsList';\nimport Toolbar from './components/Toolbar';\nimport UserInfo from './components/UserInfo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UserProfile(props) {\n  _s();\n\n  useEffect(() => {\n    fetch(urlString).then(response => response.json().then(function (json) {\n      if (json.username === null) {\n        var nonexistentUserDiv = document.getElementById('nonexistent-user-div');\n        document.getElementById('nonexistent-user-text-field').innerHTML = username + \" does not exist\";\n        document.getElementById('main-div').hidden = true;\n        nonexistentUserDiv.hidden = false; //Move the request-success-div to the center of the screen once the width and height have been rendered\n\n        nonexistentUserDiv.style.marginTop = \"-\" + nonexistentUserDiv.offsetHeight / 2 + \"px\";\n        nonexistentUserDiv.style.marginLeft = \"-\" + nonexistentUserDiv.offsetWidth / 2 + \"px\";\n      }\n\n      if (username === json.username) document.getElementById('edit-button').hidden = false;\n      var questionsCompleted = json.questionsCompleted.length;\n      var questionsAttempted = json.questionsAttempted.length - questionsCompleted;\n      var questionsUnattempted = total - questionsAttempted - questionsCompleted;\n      var chartValues = [questionsCompleted, questionsAttempted, questionsUnattempted];\n      document.getElementById('completed-label').innerHTML = \"Questions completed: \" + questionsCompleted + \"/\" + total;\n      document.getElementById('attempted-label').innerHTML = \"Questions attempted: \" + questionsAttempted + \"/\" + total;\n      document.getElementById('unattempted-label').innerHTML = \"Questions unattempted: \" + questionsUnattempted + \"/\" + total;\n      ctx = document.getElementById('canvas').getContext('2d');\n      createChart(100, 100, 80, 18, chartValues, chartColors);\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"spacer-div\",\n      style: {\n        height: \"50px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        float: \"left\",\n        display: \"inline\",\n        width: \"30%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(UserInfo, {\n        postId: props.postId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        float: \"left\",\n        display: \"inline\",\n        width: \"50%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(QuestionsList, {\n        postId: props.postId,\n        hidden: \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UserProfile, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = UserProfile;\nexport default UserProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"sources":["C:/Users/Zacha/Desktop/opencode-frontend/src/UserProfile.js"],"names":["React","useEffect","QuestionsList","Toolbar","UserInfo","UserProfile","props","fetch","urlString","then","response","json","username","nonexistentUserDiv","document","getElementById","innerHTML","hidden","style","marginTop","offsetHeight","marginLeft","offsetWidth","questionsCompleted","length","questionsAttempted","questionsUnattempted","total","chartValues","ctx","getContext","createChart","chartColors","height","float","display","width","postId"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport QuestionsList from './components/QuestionsList';\nimport Toolbar from './components/Toolbar';\nimport UserInfo from './components/UserInfo';\n\nfunction UserProfile(props) {\n    useEffect(() => {\n        fetch(urlString)\n            .then(response => response.json().then(function(json) {\n                if(json.username === null) {\n                    var nonexistentUserDiv = document.getElementById('nonexistent-user-div')\n                    document.getElementById('nonexistent-user-text-field').innerHTML = username + \" does not exist\"\n                    document.getElementById('main-div').hidden = true\n                    nonexistentUserDiv.hidden = false\n\n                    //Move the request-success-div to the center of the screen once the width and height have been rendered\n                    nonexistentUserDiv.style.marginTop = \"-\" + nonexistentUserDiv.offsetHeight / 2 + \"px\"\n                    nonexistentUserDiv.style.marginLeft = \"-\" + nonexistentUserDiv.offsetWidth / 2 + \"px\"\n                }\n                if(username === json.username)\n                    document.getElementById('edit-button').hidden = false\n\n                var questionsCompleted = json.questionsCompleted.length\n                var questionsAttempted = json.questionsAttempted.length - questionsCompleted\n                var questionsUnattempted = total - questionsAttempted - questionsCompleted\n                var chartValues = [questionsCompleted, questionsAttempted, questionsUnattempted]\n\n                document.getElementById('completed-label').innerHTML = \"Questions completed: \" + questionsCompleted + \"/\" + total\n                document.getElementById('attempted-label').innerHTML = \"Questions attempted: \" + questionsAttempted + \"/\" + total\n                document.getElementById('unattempted-label').innerHTML = \"Questions unattempted: \" + questionsUnattempted + \"/\" + total\n\n                ctx = document.getElementById('canvas').getContext('2d')\n                createChart(100, 100, 80, 18, chartValues, chartColors)\n            }));\n    }, [])\n    \n    return(\n        <>\n            <Toolbar />\n            \n            <div id=\"spacer-div\" style={{height: \"50px\"}}></div>\n\n            <div style={{float:\"left\", display:\"inline\", width: \"30%\"}}>\n            <UserInfo postId={props.postId}></UserInfo>\n            </div>\n\n            <div style={{float:\"left\", display:\"inline\", width: \"50%\"}}>\n            <QuestionsList postId={props.postId} hidden=\"true\"/>\n            </div>\n        </>\n    )\n}\n\nexport default UserProfile;"]},"metadata":{},"sourceType":"module"}