{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zacha\\\\Desktop\\\\opencode-frontend\\\\src\\\\components\\\\UserSignUpForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./UserSignUpForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class UserSignUpForm extends React.Component {\n  async componentDidMount() {\n    //Since we are using a button outside of the form to handle the login attempt\n    //let's listen to the username and password input fields for if the user\n    //presses the enter key, and if so we can simulate a button click\n    var usernameInput = document.getElementById('username');\n    var passwordInput = document.getElementById('password');\n    usernameInput.addEventListener('keyup', function onEvent(e) {\n      if (e.code === \"Enter\") {\n        document.getElementById('submit-button').click();\n      }\n    });\n    passwordInput.addEventListener('keyup', function onEvent(e) {\n      if (e.code === \"Enter\") {\n        document.getElementById('submit-button').click();\n      }\n    }); //Change the size of the signup-form\n\n    var signUpForm = document.getElementById('signup-form');\n    signUpForm.style.width = window.innerWidth / 8 + \"px\";\n    signUpForm.style.height = window.innerHeight / 4 + \"px\"; //Move the signup-div to the center of the screen once the width and height have been rendered\n\n    var signUpDiv = document.getElementById('signup-div');\n    signUpDiv.style.marginTop = \"-\" + signUpDiv.offsetHeight / 2 + \"px\";\n    signUpDiv.style.marginLeft = \"-\" + signUpDiv.offsetWidth / 2 + \"px\";\n  }\n\n  render() {\n    function registrationHandler(username, email, password, confirmPassword) {\n      var signUpJSON = {\n        \"username\": username,\n        \"password\": password,\n        \"email\": email\n      }; //Grab the error messages\n\n      var noUsernameMessage = document.getElementById('no-username-message');\n      var noEmailMessage = document.getElementById('no-email-message');\n      var noPasswordMessage = document.getElementById('no-password-message');\n      var nonMatchingPasswordMessage = document.getElementById('nonmatching-password-message');\n      var usernameAlreadyTakenMessage = document.getElementById('username-already-taken-message'); //Reset all the error messages when the user attempts to sign up\n\n      noUsernameMessage.hidden = true;\n      noEmailMessage.hidden = true;\n      noPasswordMessage.hidden = true;\n      nonMatchingPasswordMessage.hidden = true;\n      usernameAlreadyTakenMessage.hidden = true; //Check if the username and password are empty. If they are, return and make the\n      //appropriate message visible. If both are empty, just default to prompting the\n      //user for a username\n\n      if (username === \"\") {\n        noUsernameMessage.hidden = false;\n        return;\n      }\n\n      if (email === \"\") {\n        noEmailMessage.hidden = false;\n        return;\n      }\n\n      if (password === \"\") {\n        noPasswordMessage.hidden = false;\n        return;\n      }\n\n      if (password != confirmPassword) {\n        nonMatchingPasswordMessage.hidden = false;\n        return;\n      }\n\n      fetch('http://localhost:8080/api/v1/registration', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(signUpJSON)\n      }).then(response => response.json().then(function (json) {\n        console.log(json); // if(json) {\n        //     if(document.getElementById('remember-me-checkbox').checked) {\n        //         localStorage.setItem('username', username)\n        //     }\n        //     else {\n        //         localStorage.clear()\n        //         sessionStorage.setItem('username', username)\n        //     }\n        //     //Go back to the homwe page upon successful login\n        //     window.location.href=\"/\";\n        // }\n        // else {\n        //     failedLoginMessage.hidden = false\n        // }\n      }));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"signup-div\",\n      className: \"signup-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"white\"\n        },\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"50px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          id: \"username-already-taken-message\",\n          hidden: \"true\",\n          style: {\n            color: \"red\"\n          },\n          children: \"Username already taken\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          id: \"no-username-message\",\n          hidden: \"true\",\n          style: {\n            color: \"red\"\n          },\n          children: \"You must enter a username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          id: \"no-email-message\",\n          hidden: \"true\",\n          style: {\n            color: \"red\"\n          },\n          children: \"You must enter an email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          id: \"no-password-message\",\n          hidden: \"true\",\n          style: {\n            color: \"red\"\n          },\n          children: \"You must enter a password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          id: \"nonmatching-password-message\",\n          hidden: \"true\",\n          style: {\n            color: \"red\"\n          },\n          children: \"Your passwords do not match\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"signup-form\",\n        className: \"signup-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 60\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: \"20px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          name: \"username\",\n          placeholder: \"Type your username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 104\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: \"20px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 54\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: \"20px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"email\",\n          name: \"email\",\n          placeholder: \"Type your email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 95\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: \"20px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 60\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: \"20px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          placeholder: \"Type your password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 108\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: \"20px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"confirm-password\",\n          children: \"Confirm password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 76\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: \"20px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirm-password\",\n          name: \"confirm-password\",\n          placeholder: \"Confirm your password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 127\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"50px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        id: \"submit-button\",\n        onClick: () => registrationHandler(window.document.getElementById('username').value, window.document.getElementById('password').value, window.document.getElementById('email').value, window.document.getElementById('confirm-password').value),\n        children: \"SIGN UP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"100px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Zacha/Desktop/opencode-frontend/src/components/UserSignUpForm.js"],"names":["React","useState","useEffect","useHistory","UserSignUpForm","Component","componentDidMount","usernameInput","document","getElementById","passwordInput","addEventListener","onEvent","e","code","click","signUpForm","style","width","window","innerWidth","height","innerHeight","signUpDiv","marginTop","offsetHeight","marginLeft","offsetWidth","render","registrationHandler","username","email","password","confirmPassword","signUpJSON","noUsernameMessage","noEmailMessage","noPasswordMessage","nonMatchingPasswordMessage","usernameAlreadyTakenMessage","hidden","fetch","method","headers","body","JSON","stringify","then","response","json","console","log","color","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./UserSignUpForm.css\";\n\nexport default class UserSignUpForm extends React.Component {\n    async componentDidMount() {\n        //Since we are using a button outside of the form to handle the login attempt\n        //let's listen to the username and password input fields for if the user\n        //presses the enter key, and if so we can simulate a button click\n        var usernameInput = document.getElementById('username')\n        var passwordInput = document.getElementById('password')\n\n        usernameInput.addEventListener('keyup', function onEvent(e) {\n            if(e.code === \"Enter\") {\n                document.getElementById('submit-button').click()\n            }\n        })\n        passwordInput.addEventListener('keyup', function onEvent(e) {\n            if(e.code === \"Enter\") {\n                document.getElementById('submit-button').click()\n            }\n        })\n\n        //Change the size of the signup-form\n        var signUpForm = document.getElementById('signup-form')\n\n        signUpForm.style.width = (window.innerWidth / 8) + \"px\";\n        signUpForm.style.height = (window.innerHeight / 4) + \"px\";\n\n        //Move the signup-div to the center of the screen once the width and height have been rendered\n        var signUpDiv = document.getElementById('signup-div')\n\n        signUpDiv.style.marginTop = \"-\" + signUpDiv.offsetHeight / 2 + \"px\"\n        signUpDiv.style.marginLeft = \"-\" + signUpDiv.offsetWidth / 2 + \"px\"\n    }\n\n    render() {\n        function registrationHandler(username, email, password, confirmPassword) {\n            var signUpJSON = {\"username\": username, \"password\": password, \"email\": email}\n\n            //Grab the error messages\n            var noUsernameMessage = document.getElementById('no-username-message')\n            var noEmailMessage = document.getElementById('no-email-message')\n            var noPasswordMessage = document.getElementById('no-password-message')\n            var nonMatchingPasswordMessage = document.getElementById('nonmatching-password-message')\n            var usernameAlreadyTakenMessage = document.getElementById('username-already-taken-message')\n\n            //Reset all the error messages when the user attempts to sign up\n            noUsernameMessage.hidden = true\n            noEmailMessage.hidden = true\n            noPasswordMessage.hidden = true\n            nonMatchingPasswordMessage.hidden = true\n            usernameAlreadyTakenMessage.hidden = true\n\n            //Check if the username and password are empty. If they are, return and make the\n            //appropriate message visible. If both are empty, just default to prompting the\n            //user for a username\n            if(username === \"\") {\n                noUsernameMessage.hidden = false\n                return\n            }\n            if(email === \"\") {\n                noEmailMessage.hidden = false\n                return\n            }\n            if(password === \"\") {\n                noPasswordMessage.hidden = false\n                return\n            }\n            if(password != confirmPassword) {\n                nonMatchingPasswordMessage.hidden = false\n                return\n            }\n            \n\n            fetch('http://localhost:8080/api/v1/registration', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(signUpJSON)\n                }).then(response => response.json().then(\n                    function (json) {\n\n                        console.log(json)\n                        // if(json) {\n                        //     if(document.getElementById('remember-me-checkbox').checked) {\n                        //         localStorage.setItem('username', username)\n                        //     }\n                        //     else {\n                        //         localStorage.clear()\n                        //         sessionStorage.setItem('username', username)\n                        //     }\n\n                        //     //Go back to the homwe page upon successful login\n                        //     window.location.href=\"/\";\n                        // }\n                        // else {\n                        //     failedLoginMessage.hidden = false\n                        // }\n                    }\n                ))\n        }\n\n        return(\n            <div id=\"signup-div\" className=\"signup-div\">\n                <h1 style={{color: \"white\"}}>Sign up</h1>\n                <div style={{height: \"50px\"}} >\n                    <b id=\"username-already-taken-message\" hidden=\"true\" style={{color: \"red\"}}>Username already taken</b>\n                    <b id=\"no-username-message\" hidden=\"true\" style={{color: \"red\"}}>You must enter a username</b>\n                    <b id=\"no-email-message\" hidden=\"true\" style={{color: \"red\"}}>You must enter an email</b>\n                    <b id=\"no-password-message\" hidden=\"true\" style={{color: \"red\"}}>You must enter a password</b>\n                    <b id=\"nonmatching-password-message\" hidden=\"true\" style={{color: \"red\"}}>Your passwords do not match</b>\n                </div>\n                <form id=\"signup-form\" className=\"signup-form\">\n                    <label for=\"username\">Username:</label><br />\n                    <div style={{height: \"20px\"}} />\n                    <input type=\"text\" id=\"username\" name=\"username\" placeholder=\"Type your username\"/><hr />\n                    <div style={{height: \"20px\"}} />\n\n                    <label for=\"email\">Email:</label><br />\n                    <div style={{height: \"20px\"}} />\n                    <input type=\"text\" id=\"email\" name=\"email\" placeholder=\"Type your email\"/><hr />\n                    <div style={{height: \"20px\"}} />\n\n                    <label for=\"password\">Password:</label><br />\n                    <div style={{height: \"20px\"}} />\n                    <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Type your password\"/><hr />\n                    <div style={{height: \"20px\"}} />\n\n                    <label for=\"confirm-password\">Confirm password:</label><br />\n                    <div style={{height: \"20px\"}} />\n                    <input type=\"password\" id=\"confirm-password\" name=\"confirm-password\" placeholder=\"Confirm your password\"/><hr />\n                </form>\n                <div style={{height: \"50px\"}} />\n                <button className=\"submit-button\" id='submit-button' onClick={() => registrationHandler(window.document.getElementById('username').value, window.document.getElementById('password').value, window.document.getElementById('email').value, window.document.getElementById('confirm-password').value)}>SIGN UP</button>\n                <div style={{height: \"100px\"}} />\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}