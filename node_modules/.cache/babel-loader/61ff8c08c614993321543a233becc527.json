{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zacha\\\\Desktop\\\\opencode-frontend\\\\src\\\\components\\\\CodeMirrorEditor.js\";\nimport React from \"react\";\nimport CodeMirror from \"react-codemirror\";\nimport 'codemirror/keymap/sublime';\nimport 'codemirror/theme/monokai.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class QuestionsList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      questions: null\n    };\n  }\n\n  // async componentDidMount() {\n  //     const FETCH_URL = \"http://localhost:8080/api/v1/question\"\n  //     const response = await fetch(FETCH_URL)\n  //     const fetchedData = await response.json()\n  //     const data = []\n  //     for(let value of fetchedData) {\n  //         var obj = {Title: value.name, Difficulty: value.difficulty, Author: value.author}\n  //         data.push(obj)\n  //     }\n  //     this.setState({questions: data, loading: false})\n  // }\n  render() {\n    const code = \"code\";\n    return /*#__PURE__*/_jsxDEV(CodeMirror, {\n      value: code,\n      options: {\n        theme: 'monokai',\n        keyMap: 'sublime',\n        mode: 'jsx',\n        lineNumbers: true,\n        tabSize: 2,\n        styleActiveLine: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Zacha/Desktop/opencode-frontend/src/components/CodeMirrorEditor.js"],"names":["React","CodeMirror","QuestionsList","Component","state","loading","questions","render","code","theme","keyMap","mode","lineNumbers","tabSize","styleActiveLine"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,2BAAP;AACA,OAAO,8BAAP;;AAEA,eAAe,MAAMC,aAAN,SAA4BF,KAAK,CAACG,SAAlC,CAA4C;AAAA;AAAA;AAAA,SACvDC,KADuD,GAC/C;AACJC,MAAAA,OAAO,EAAE,IADL;AAEJC,MAAAA,SAAS,EAAE;AAFP,KAD+C;AAAA;;AAMvD;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEAC,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,GAAG,MAAb;AACA,wBACG,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEA,IAAnB;AAAyB,MAAA,OAAO,EAAE;AAC9BC,QAAAA,KAAK,EAAE,SADuB;AAE9BC,QAAAA,MAAM,EAAE,SAFsB;AAG9BC,QAAAA,IAAI,EAAE,KAHwB;AAI9BC,QAAAA,WAAW,EAAE,IAJiB;AAK9BC,QAAAA,OAAO,EAAE,CALqB;AAM9BC,QAAAA,eAAe,EAAE;AANa;AAAlC;AAAA;AAAA;AAAA;AAAA,YADH;AAUH;;AAnCsD","sourcesContent":["import React from \"react\";\nimport CodeMirror from \"react-codemirror\";\nimport 'codemirror/keymap/sublime';\nimport 'codemirror/theme/monokai.css';\n\nexport default class QuestionsList extends React.Component {\n    state = {\n        loading: true,\n        questions: null\n    }\n\n    // async componentDidMount() {\n    //     const FETCH_URL = \"http://localhost:8080/api/v1/question\"\n\n    //     const response = await fetch(FETCH_URL)\n\n    //     const fetchedData = await response.json()\n\n    //     const data = []\n\n    //     for(let value of fetchedData) {\n    //         var obj = {Title: value.name, Difficulty: value.difficulty, Author: value.author}\n    //         data.push(obj)\n    //     }\n\n    //     this.setState({questions: data, loading: false})\n    // }\n\n    render() {\n        const code = \"code\"\n        return(\n           <CodeMirror value={code} options={{ \n               theme: 'monokai', \n               keyMap: 'sublime', \n               mode: 'jsx',\n               lineNumbers: true,\n               tabSize: 2,\n               styleActiveLine: true\n             }}/>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}