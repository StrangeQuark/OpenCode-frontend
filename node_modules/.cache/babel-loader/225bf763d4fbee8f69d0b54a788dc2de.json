{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zacha\\\\Desktop\\\\opencode-frontend\\\\src\\\\components\\\\QuestionsList.js\";\nimport React from \"react\";\nimport \"./QuestionList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class QuestionsList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      questions: null,\n      displayedQuestions: null,\n      questionsLength: null\n    };\n  }\n\n  async componentDidMount() {\n    const data = [];\n\n    if (window.location.href.includes(\"projects\")) {\n      const FETCH_URL = \"http://localhost:8080/api/v1/project\";\n      const response = await fetch(FETCH_URL);\n      const fetchedData = await response.json();\n\n      for (let value of fetchedData) {\n        var obj = {\n          Title: value.name,\n          Difficulty: value.projectType,\n          Author: value.author\n        };\n        data.push(obj);\n      }\n    } else {\n      const FETCH_URL = \"http://localhost:8080/api/v1/question\";\n      const response = await fetch(FETCH_URL);\n      const fetchedData = await response.json();\n\n      for (let value of fetchedData) {\n        var obj = {\n          Title: value.name,\n          Difficulty: value.difficulty,\n          Author: value.author\n        };\n        data.push(obj);\n      }\n    }\n\n    this.setState({\n      questions: data,\n      loading: false,\n      questionsLength: data.length,\n      displayedQuestions: data.splice(0, 5)\n    }); //Initialize the first button to be highlighted, since click on the home page will always load the first page of the questionList\n\n    document.getElementById('pagination-button-1').style.color = 'green';\n  }\n\n  render() {\n    const ITEMS_PER_PAGE = 5;\n    var currentPage = 1;\n    var numOfPaginationButtons = Math.floor(1 + this.state.questionsLength / 5);\n    var isProjectsPage = window.location.href.includes('projects');\n\n    function click(item, questions) {\n      var counter = 0;\n      var tempQuestionsArray = {};\n      currentPage = item;\n\n      for (var i = ITEMS_PER_PAGE * item - ITEMS_PER_PAGE; i < ITEMS_PER_PAGE * item; i++) {\n        tempQuestionsArray[counter] = questions[i];\n      }\n\n      this.setState({\n        displayedQuestions: tempQuestionsArray\n      });\n      resetButtonColors(\"white\");\n      document.getElementById('pagination-button-' + item).style.color = 'green';\n    }\n\n    function resetButtonColors(color) {\n      for (var i = 1; i <= numOfPaginationButtons; i++) {\n        document.getElementById('pagination-button-' + i).style.color = color;\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        cellSpacing: \"0\",\n        className: \"question-table\",\n        style: {\n          width: '80%',\n          height: 'auto',\n          padding: '10px 10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"question-table-header\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"no-background-button\",\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"no-background-button\",\n                children: isProjectsPage ? \"Type\" : \"Difficulty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"no-background-button\",\n                children: \"Author\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 44\n          }, this) : Object.values(this.state.displayedQuestions).map((obj, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: index % 2 === 0 ? {\n              \"background-color\": \"#14161a\",\n              height: '100px'\n            } : {\n              height: '100px'\n            },\n            children: Object.values(obj).map((value, index2) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: index2 % 3 === 0 ? /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"question-table-links\",\n                href: isProjectsPage ? \"/project?name=\" + value : \"/question?name=\" + value,\n                children: value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 70\n              }, this) : value\n            }, index2, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 41\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"no-background-button\",\n            onClick: () => {\n              currentPage === 1 ? click(currentPage, this.state.questions) : click(currentPage - 1, this.state.questions);\n            },\n            children: '<'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this), this.state.loading ? /*#__PURE__*/_jsxDEV(\"li\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 40\n        }, this) : Object.values(this.state.questions).map((obj, index) => index % ITEMS_PER_PAGE === 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"pagination-button-\" + (1 + index / ITEMS_PER_PAGE),\n            className: \"no-background-button\",\n            onClick: () => {\n              click(1 + index / ITEMS_PER_PAGE, this.state.questions);\n            },\n            children: 1 + index / ITEMS_PER_PAGE\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 63\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 59\n        }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"no-background-button\",\n            onClick: () => {\n              currentPage === numOfPaginationButtons ? click(currentPage, this.state.questions) : click(currentPage + 1, this.state.questions);\n            },\n            children: \">\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Zacha/Desktop/opencode-frontend/src/components/QuestionsList.js"],"names":["React","QuestionsList","Component","state","loading","questions","displayedQuestions","questionsLength","componentDidMount","data","window","location","href","includes","FETCH_URL","response","fetch","fetchedData","json","value","obj","Title","name","Difficulty","projectType","Author","author","push","difficulty","setState","length","splice","document","getElementById","style","color","render","ITEMS_PER_PAGE","currentPage","numOfPaginationButtons","Math","floor","isProjectsPage","click","item","counter","tempQuestionsArray","i","resetButtonColors","width","height","padding","Object","values","map","index","index2"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./QuestionList.css\";\n\nexport default class QuestionsList extends React.Component {\n    state = {\n        loading: true,\n        questions: null,\n        displayedQuestions: null,\n        questionsLength: null\n    }\n\n    async componentDidMount() {\n        const data = []\n\n        if(window.location.href.includes(\"projects\")) {\n            const FETCH_URL = \"http://localhost:8080/api/v1/project\"\n\n            const response = await fetch(FETCH_URL)\n\n            const fetchedData = await response.json()\n\n            for(let value of fetchedData) {\n                var obj = {Title: value.name, Difficulty: value.projectType, Author: value.author}\n                data.push(obj)\n            }\n        }\n        else {\n            const FETCH_URL = \"http://localhost:8080/api/v1/question\"\n\n            const response = await fetch(FETCH_URL)\n\n            const fetchedData = await response.json()\n\n            for(let value of fetchedData) {\n                var obj = {Title: value.name, Difficulty: value.difficulty, Author: value.author}\n                data.push(obj)\n            }\n        }\n\n        this.setState({questions: data, loading: false, questionsLength: data.length, displayedQuestions: data.splice(0, 5)})\n\n        //Initialize the first button to be highlighted, since click on the home page will always load the first page of the questionList\n        document.getElementById('pagination-button-1').style.color = 'green'\n    }\n\n    render() {\n\n        const ITEMS_PER_PAGE = 5\n\n        var currentPage = 1\n        var numOfPaginationButtons = Math.floor(1 + this.state.questionsLength/5)\n        var isProjectsPage = window.location.href.includes('projects')\n\n        function click(item, questions) {\n            var counter = 0\n            var tempQuestionsArray = {}\n            currentPage = item\n\n            for(var i = (ITEMS_PER_PAGE*item)-ITEMS_PER_PAGE; i < ITEMS_PER_PAGE * item; i++) {\n                tempQuestionsArray[counter] = questions[i]\n            }\n\n            this.setState({displayedQuestions: tempQuestionsArray})\n            \n            resetButtonColors(\"white\")\n\n            document.getElementById('pagination-button-' + item).style.color = 'green'\n        }\n\n        function resetButtonColors(color) {\n            for(var i = 1; i <= numOfPaginationButtons; i++) {\n                document.getElementById('pagination-button-' + i).style.color = color\n            }\n        }\n\n        return(\n            <>\n            <table cellSpacing=\"0\" className='question-table' style={{width: '80%', height: 'auto', padding: '10px 10px'}}>\n                <thead className='question-table-header'>\n                    <tr>\n                        <th><button className=\"no-background-button\">Title</button></th>\n                        <th><button className=\"no-background-button\">{isProjectsPage ? \"Type\" : \"Difficulty\"}</button></th>\n                        <th><button className=\"no-background-button\">Author</button></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    { this.state.loading ? <div>loading...</div> :\n                    Object.values(this.state.displayedQuestions).map((obj, index) => (\n                        <tr key={index} style={(index % 2 === 0) ? {\"background-color\": \"#14161a\", height: '100px'} : {height: '100px'}}>\n                            {\n                                Object.values(obj).map((value, index2) => (\n                                        <td key={index2}>\n                                            { \n                                                (index2 % 3 === 0) ? <a className=\"question-table-links\" href={ isProjectsPage ? \"/project?name=\" + value : \"/question?name=\" + value }>{value}</a> : value \n                                            }\n                                        </td>\n                                ))\n                            }\n                        </tr>\n                    ))\n                    }\n                </tbody>\n            </table>\n            <ul className='pagination'>\n                <li><button className=\"no-background-button\" onClick={() => {(currentPage === 1) ? click(currentPage, this.state.questions) : click(currentPage - 1, this.state.questions)}}>{'<'}</button></li>\n                { this.state.loading ? <li></li> : \n                    Object.values(this.state.questions).map((obj,index) => (\n                        (index % ITEMS_PER_PAGE === 0) && <li><button id={\"pagination-button-\" + (1 + index/ITEMS_PER_PAGE)} className=\"no-background-button\" onClick={() => {click(1 + index/ITEMS_PER_PAGE, this.state.questions)}}>{1 + index/ITEMS_PER_PAGE}</button></li>\n                    ))\n                }\n                <li><button className=\"no-background-button\" onClick={() => {(currentPage === numOfPaginationButtons) ? click(currentPage, this.state.questions) : click(currentPage + 1, this.state.questions)}}>{\">\"}</button></li>\n            </ul>\n        </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}