{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zacha\\\\Desktop\\\\opencode-frontend\\\\src\\\\Project.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Toolbar from './components/Toolbar';\nimport './Project.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Question() {\n  _s();\n\n  //Grab the url search params\n  const query = window.location.search;\n  const urlParameters = new URLSearchParams(query);\n  const nameParameter = urlParameters.get('name'); //URL for making the API calls\n\n  var urlString = \"http://localhost:8080/api/v1/project/\" + nameParameter; //Fetch the data after the initial rendering of the page\n  //It is important to add the second argument, [], which runs this function only once after initial rendering\n  //Without the second argument, this function will run after each time the page is re-rendered\n\n  useEffect(() => {\n    fetch(urlString).then(response => response.json().then(function (json) {\n      document.getElementById('project-div').innerHTML = json.projectHTML;\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"project-div\",\n      className: \"project-div\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Question, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["C:/Users/Zacha/Desktop/opencode-frontend/src/Project.js"],"names":["React","useEffect","Toolbar","Question","query","window","location","search","urlParameters","URLSearchParams","nameParameter","get","urlString","fetch","then","response","json","document","getElementById","innerHTML","projectHTML"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAO,eAAP;;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB;AACA,QAAMC,KAAK,GAAGC,MAAM,CAACC,QAAP,CAAgBC,MAA9B;AACA,QAAMC,aAAa,GAAG,IAAIC,eAAJ,CAAoBL,KAApB,CAAtB;AACA,QAAMM,aAAa,GAAGF,aAAa,CAACG,GAAd,CAAkB,MAAlB,CAAtB,CAJkB,CAOlB;;AACA,MAAIC,SAAS,GAAG,0CAA0CF,aAA1D,CARkB,CAUlB;AACA;AACA;;AACAT,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,KAAK,CAACD,SAAD,CAAL,CACGE,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqB,UAASE,IAAT,EAAe;AAClDC,MAAAA,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC,SAAvC,GAAmDH,IAAI,CAACI,WAAxD;AACH,KAFiB,CADpB;AAID,GALQ,EAKN,EALM,CAAT;AAOA,sBACI;AAAA,4BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAK,MAAA,EAAE,EAAC,aAAR;AAAsB,MAAA,SAAS,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;AAOD;;GA3BQjB,Q;;KAAAA,Q;AA6BT,eAAeA,QAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport Toolbar from './components/Toolbar'\nimport './Project.css'\n\nfunction Question() {\n  //Grab the url search params\n  const query = window.location.search\n  const urlParameters = new URLSearchParams(query)\n  const nameParameter = urlParameters.get('name')\n\n\n  //URL for making the API calls\n  var urlString = \"http://localhost:8080/api/v1/project/\" + nameParameter\n\n  //Fetch the data after the initial rendering of the page\n  //It is important to add the second argument, [], which runs this function only once after initial rendering\n  //Without the second argument, this function will run after each time the page is re-rendered\n  useEffect(() => {\n    fetch(urlString)\n      .then(response => response.json().then(function(json) {\n          document.getElementById('project-div').innerHTML = json.projectHTML\n      }));\n  }, [])\n\n  return(\n      <>\n          <Toolbar />\n          \n          <div id=\"project-div\" className='project-div'/>\n      </>\n  )\n}\n\nexport default Question;"]},"metadata":{},"sourceType":"module"}