{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zacha\\\\Desktop\\\\opencode-frontend\\\\src\\\\components\\\\QuestionsList.js\";\nimport React from \"react\";\nimport \"./QuestionList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class QuestionsList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      questions: null,\n      questionsLength: null\n    };\n  }\n\n  async componentDidMount() {\n    const FETCH_URL = \"http://localhost:8080/api/v1/question\";\n    const response = await fetch(FETCH_URL);\n    const fetchedData = await response.json();\n    const data = [];\n\n    for (let value of fetchedData) {\n      var obj = {\n        Title: value.name,\n        Difficulty: value.difficulty,\n        Author: value.author\n      };\n      data.push(obj);\n    }\n\n    this.setState({\n      questions: data,\n      loading: false,\n      questionsLength: data.length\n    });\n  }\n\n  render() {\n    var currentPage = 1;\n\n    function click(item) {\n      currentPage = item;\n      resetButtonColors(\"white\");\n      document.getElementById('pagination-button-' + item).style.color = 'red';\n    }\n\n    function resetButtonColors(color) {\n      var buttons = document.getElementsByTagName('button');\n\n      for (var button in buttons) {\n        button.style.color = color;\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        cellSpacing: \"0\",\n        className: \"question-table\",\n        style: {\n          width: '80%',\n          height: 'auto',\n          padding: '10px 10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"question-table-header\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"no-background-button\",\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"no-background-button\",\n                children: \"Difficulty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"no-background-button\",\n                children: \"Author\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 44\n          }, this) : Object.values(this.state.questions).map((obj, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: index % 2 == 0 ? {\n              \"background-color\": \"#14161a\",\n              height: '100px'\n            } : {\n              height: '100px'\n            },\n            children: Object.values(obj).map((value, index2) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: index2 % 3 == 0 ? /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"question-table-links\",\n                href: \"/question?name=\" + value,\n                children: value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 69\n              }, this) : value\n            }, index2, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 41\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"no-background-button\",\n            onClick: () => {\n              currentPage == 1 ? click(currentPage) : click(currentPage - 1);\n            },\n            children: '<'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), this.state.loading ? /*#__PURE__*/_jsxDEV(\"li\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 40\n        }, this) : Object.values(this.state.questions).map((obj, index) => index % 2 == 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"pagination-button-\" + (1 + index / 2),\n            className: \"no-background-button\",\n            onClick: () => {\n              click(1 + index / 2);\n            },\n            children: 1 + index / 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 45\n        }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"no-background-button\",\n            onClick: () => {\n              currentPage == Math.floor(1 + this.state.questionsLength / 2) ? click(currentPage) : click(currentPage + 1);\n            },\n            children: \">\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Zacha/Desktop/opencode-frontend/src/components/QuestionsList.js"],"names":["React","QuestionsList","Component","state","loading","questions","questionsLength","componentDidMount","FETCH_URL","response","fetch","fetchedData","json","data","value","obj","Title","name","Difficulty","difficulty","Author","author","push","setState","length","render","currentPage","click","item","resetButtonColors","document","getElementById","style","color","buttons","getElementsByTagName","button","width","height","padding","Object","values","map","index","index2","Math","floor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./QuestionList.css\";\n\nexport default class QuestionsList extends React.Component {\n    state = {\n        loading: true,\n        questions: null,\n        questionsLength: null\n    }\n\n    async componentDidMount() {\n        const FETCH_URL = \"http://localhost:8080/api/v1/question\"\n\n        const response = await fetch(FETCH_URL)\n\n        const fetchedData = await response.json()\n\n        const data = []\n\n        for(let value of fetchedData) {\n            var obj = {Title: value.name, Difficulty: value.difficulty, Author: value.author}\n            data.push(obj)\n        }\n\n        this.setState({questions: data, loading: false, questionsLength: data.length})\n    }\n\n    render() {\n\n        var currentPage = 1\n\n        function click(item) {\n            currentPage = item\n            \n            resetButtonColors(\"white\")\n\n            document.getElementById('pagination-button-' + item).style.color = 'red';\n        }\n\n        function resetButtonColors(color) {\n            var buttons = document.getElementsByTagName('button')\n\n            for(var button in buttons) {\n                button.style.color = color\n            }\n        }\n\n        return(\n            <>\n            <table cellSpacing=\"0\" className='question-table' style={{width: '80%', height: 'auto', padding: '10px 10px'}}>\n                <thead className='question-table-header'>\n                    <tr>\n                        <th><button className=\"no-background-button\">Title</button></th>\n                        <th><button className=\"no-background-button\">Difficulty</button></th>\n                        <th><button className=\"no-background-button\">Author</button></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    { this.state.loading ? <div>loading...</div> :\n                    Object.values(this.state.questions).map((obj, index) => (\n                        <tr key={index} style={(index % 2 == 0) ? {\"background-color\": \"#14161a\", height: '100px'} : {height: '100px'}}>\n                            {\n                                Object.values(obj).map((value, index2) => (\n                                        <td key={index2}>\n                                            { \n                                                (index2 % 3 == 0) ? <a className=\"question-table-links\" href={\"/question?name=\" + value}>{value}</a> : value \n                                            }\n                                        </td>\n                                ))\n                            }\n                        </tr>\n                    ))\n                    }\n                </tbody>\n            </table>\n            <ul className='pagination'>\n                <li><button className=\"no-background-button\" onClick={() => {(currentPage == 1) ? click(currentPage) : click(currentPage - 1)}}>{'<'}</button></li>\n                { this.state.loading ? <li></li> : \n                    Object.values(this.state.questions).map((obj,index) => (\n                        (index % 2 == 0) && <li><button id={\"pagination-button-\" + (1 + index/2)} className=\"no-background-button\" onClick={() => {click(1 + index/2)}}>{1 + index/2}</button></li>\n                    ))\n                }\n                <li><button className=\"no-background-button\" onClick={() => {(currentPage == Math.floor(1 + this.state.questionsLength/2)) ? click(currentPage) : click(currentPage + 1)}}>{\">\"}</button></li>\n            </ul>\n        </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}