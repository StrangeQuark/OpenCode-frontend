{"ast":null,"code":"'use strict';\n\nvar React = require('react');\n\nvar ReactDOM = require('react-dom');\n\nvar PropTypes = require('prop-types');\n\nvar className = require('classnames');\n\nvar debounce = require('lodash.debounce');\n\nvar isEqual = require('lodash.isequal');\n\nvar createReactClass = require('create-react-class');\n\nfunction normalizeLineEndings(str) {\n  if (!str) return str;\n  return str.replace(/\\r\\n|\\r/g, '\\n');\n}\n\nvar CodeMirror = createReactClass({\n  propTypes: {\n    autoFocus: PropTypes.bool,\n    className: PropTypes.any,\n    codeMirrorInstance: PropTypes.func,\n    defaultValue: PropTypes.string,\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    onCursorActivity: PropTypes.func,\n    onFocusChange: PropTypes.func,\n    onScroll: PropTypes.func,\n    options: PropTypes.object,\n    path: PropTypes.string,\n    value: PropTypes.string,\n    preserveScrollPosition: PropTypes.bool\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      preserveScrollPosition: false\n    };\n  },\n  getCodeMirrorInstance: function getCodeMirrorInstance() {\n    return this.props.codeMirrorInstance || require('codemirror');\n  },\n  getInitialState: function getInitialState() {\n    return {\n      isFocused: false\n    };\n  },\n  componentWillMount: function componentWillMount() {\n    this.componentWillReceiveProps = debounce(this.componentWillReceiveProps, 0);\n\n    if (this.props.path) {\n      console.error('Warning: react-codemirror: the `path` prop has been changed to `name`');\n    }\n  },\n  componentDidMount: function componentDidMount() {\n    var codeMirrorInstance = this.getCodeMirrorInstance();\n    this.codeMirror = codeMirrorInstance.fromTextArea(this.textareaNode, this.props.options);\n    this.codeMirror.on('change', this.codemirrorValueChanged);\n    this.codeMirror.on('cursorActivity', this.cursorActivity);\n    this.codeMirror.on('focus', this.focusChanged.bind(this, true));\n    this.codeMirror.on('blur', this.focusChanged.bind(this, false));\n    this.codeMirror.on('scroll', this.scrollChanged);\n    this.codeMirror.setValue(this.props.defaultValue || this.props.value || '');\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    // is there a lighter-weight way to remove the cm instance?\n    if (this.codeMirror) {\n      this.codeMirror.toTextArea();\n    }\n  },\n  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n    if (this.codeMirror && nextProps.value !== undefined && nextProps.value !== this.props.value && normalizeLineEndings(this.codeMirror.getValue()) !== normalizeLineEndings(nextProps.value)) {\n      if (this.props.preserveScrollPosition) {\n        var prevScrollPosition = this.codeMirror.getScrollInfo();\n        this.codeMirror.setValue(nextProps.value);\n        this.codeMirror.scrollTo(prevScrollPosition.left, prevScrollPosition.top);\n      } else {\n        this.codeMirror.setValue(nextProps.value);\n      }\n    }\n\n    if (typeof nextProps.options === 'object') {\n      for (var optionName in nextProps.options) {\n        if (nextProps.options.hasOwnProperty(optionName)) {\n          this.setOptionIfChanged(optionName, nextProps.options[optionName]);\n        }\n      }\n    }\n  },\n  setOptionIfChanged: function setOptionIfChanged(optionName, newValue) {\n    var oldValue = this.codeMirror.getOption(optionName);\n\n    if (!isEqual(oldValue, newValue)) {\n      this.codeMirror.setOption(optionName, newValue);\n    }\n  },\n  getCodeMirror: function getCodeMirror() {\n    return this.codeMirror;\n  },\n  focus: function focus() {\n    if (this.codeMirror) {\n      this.codeMirror.focus();\n    }\n  },\n  focusChanged: function focusChanged(focused) {\n    this.setState({\n      isFocused: focused\n    });\n    this.props.onFocusChange && this.props.onFocusChange(focused);\n  },\n  cursorActivity: function cursorActivity(cm) {\n    this.props.onCursorActivity && this.props.onCursorActivity(cm);\n  },\n  scrollChanged: function scrollChanged(cm) {\n    this.props.onScroll && this.props.onScroll(cm.getScrollInfo());\n  },\n  codemirrorValueChanged: function codemirrorValueChanged(doc, change) {\n    if (this.props.onChange && change.origin !== 'setValue') {\n      this.props.onChange(doc.getValue(), change);\n    }\n  },\n  render: function render() {\n    var _this = this;\n\n    var editorClassName = className('ReactCodeMirror', this.state.isFocused ? 'ReactCodeMirror--focused' : null, this.props.className);\n    return React.createElement('div', {\n      className: editorClassName\n    }, React.createElement('textarea', {\n      ref: function (ref) {\n        return _this.textareaNode = ref;\n      },\n      name: this.props.name || this.props.path,\n      defaultValue: this.props.value,\n      autoComplete: 'off',\n      autoFocus: this.props.autoFocus\n    }));\n  }\n});\nmodule.exports = CodeMirror;","map":{"version":3,"sources":["C:/Users/Zacha/Desktop/opencode-frontend/node_modules/react-codemirror/lib/Codemirror.js"],"names":["React","require","ReactDOM","PropTypes","className","debounce","isEqual","createReactClass","normalizeLineEndings","str","replace","CodeMirror","propTypes","autoFocus","bool","any","codeMirrorInstance","func","defaultValue","string","name","onChange","onCursorActivity","onFocusChange","onScroll","options","object","path","value","preserveScrollPosition","getDefaultProps","getCodeMirrorInstance","props","getInitialState","isFocused","componentWillMount","componentWillReceiveProps","console","error","componentDidMount","codeMirror","fromTextArea","textareaNode","on","codemirrorValueChanged","cursorActivity","focusChanged","bind","scrollChanged","setValue","componentWillUnmount","toTextArea","nextProps","undefined","getValue","prevScrollPosition","getScrollInfo","scrollTo","left","top","optionName","hasOwnProperty","setOptionIfChanged","newValue","oldValue","getOption","setOption","getCodeMirror","focus","focused","setState","cm","doc","change","origin","render","_this","editorClassName","state","createElement","ref","autoComplete","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar React = require('react');\nvar ReactDOM = require('react-dom');\nvar PropTypes = require('prop-types');\nvar className = require('classnames');\nvar debounce = require('lodash.debounce');\nvar isEqual = require('lodash.isequal');\nvar createReactClass = require('create-react-class');\n\nfunction normalizeLineEndings(str) {\n\tif (!str) return str;\n\treturn str.replace(/\\r\\n|\\r/g, '\\n');\n}\n\nvar CodeMirror = createReactClass({\n\tpropTypes: {\n\t\tautoFocus: PropTypes.bool,\n\t\tclassName: PropTypes.any,\n\t\tcodeMirrorInstance: PropTypes.func,\n\t\tdefaultValue: PropTypes.string,\n\t\tname: PropTypes.string,\n\t\tonChange: PropTypes.func,\n\t\tonCursorActivity: PropTypes.func,\n\t\tonFocusChange: PropTypes.func,\n\t\tonScroll: PropTypes.func,\n\t\toptions: PropTypes.object,\n\t\tpath: PropTypes.string,\n\t\tvalue: PropTypes.string,\n\t\tpreserveScrollPosition: PropTypes.bool\n\t},\n\tgetDefaultProps: function getDefaultProps() {\n\t\treturn {\n\t\t\tpreserveScrollPosition: false\n\t\t};\n\t},\n\tgetCodeMirrorInstance: function getCodeMirrorInstance() {\n\t\treturn this.props.codeMirrorInstance || require('codemirror');\n\t},\n\tgetInitialState: function getInitialState() {\n\t\treturn {\n\t\t\tisFocused: false\n\t\t};\n\t},\n\tcomponentWillMount: function componentWillMount() {\n\t\tthis.componentWillReceiveProps = debounce(this.componentWillReceiveProps, 0);\n\t\tif (this.props.path) {\n\t\t\tconsole.error('Warning: react-codemirror: the `path` prop has been changed to `name`');\n\t\t}\n\t},\n\tcomponentDidMount: function componentDidMount() {\n\t\tvar codeMirrorInstance = this.getCodeMirrorInstance();\n\t\tthis.codeMirror = codeMirrorInstance.fromTextArea(this.textareaNode, this.props.options);\n\t\tthis.codeMirror.on('change', this.codemirrorValueChanged);\n\t\tthis.codeMirror.on('cursorActivity', this.cursorActivity);\n\t\tthis.codeMirror.on('focus', this.focusChanged.bind(this, true));\n\t\tthis.codeMirror.on('blur', this.focusChanged.bind(this, false));\n\t\tthis.codeMirror.on('scroll', this.scrollChanged);\n\t\tthis.codeMirror.setValue(this.props.defaultValue || this.props.value || '');\n\t},\n\tcomponentWillUnmount: function componentWillUnmount() {\n\t\t// is there a lighter-weight way to remove the cm instance?\n\t\tif (this.codeMirror) {\n\t\t\tthis.codeMirror.toTextArea();\n\t\t}\n\t},\n\tcomponentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n\t\tif (this.codeMirror && nextProps.value !== undefined && nextProps.value !== this.props.value && normalizeLineEndings(this.codeMirror.getValue()) !== normalizeLineEndings(nextProps.value)) {\n\t\t\tif (this.props.preserveScrollPosition) {\n\t\t\t\tvar prevScrollPosition = this.codeMirror.getScrollInfo();\n\t\t\t\tthis.codeMirror.setValue(nextProps.value);\n\t\t\t\tthis.codeMirror.scrollTo(prevScrollPosition.left, prevScrollPosition.top);\n\t\t\t} else {\n\t\t\t\tthis.codeMirror.setValue(nextProps.value);\n\t\t\t}\n\t\t}\n\t\tif (typeof nextProps.options === 'object') {\n\t\t\tfor (var optionName in nextProps.options) {\n\t\t\t\tif (nextProps.options.hasOwnProperty(optionName)) {\n\t\t\t\t\tthis.setOptionIfChanged(optionName, nextProps.options[optionName]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tsetOptionIfChanged: function setOptionIfChanged(optionName, newValue) {\n\t\tvar oldValue = this.codeMirror.getOption(optionName);\n\t\tif (!isEqual(oldValue, newValue)) {\n\t\t\tthis.codeMirror.setOption(optionName, newValue);\n\t\t}\n\t},\n\tgetCodeMirror: function getCodeMirror() {\n\t\treturn this.codeMirror;\n\t},\n\tfocus: function focus() {\n\t\tif (this.codeMirror) {\n\t\t\tthis.codeMirror.focus();\n\t\t}\n\t},\n\tfocusChanged: function focusChanged(focused) {\n\t\tthis.setState({\n\t\t\tisFocused: focused\n\t\t});\n\t\tthis.props.onFocusChange && this.props.onFocusChange(focused);\n\t},\n\tcursorActivity: function cursorActivity(cm) {\n\t\tthis.props.onCursorActivity && this.props.onCursorActivity(cm);\n\t},\n\tscrollChanged: function scrollChanged(cm) {\n\t\tthis.props.onScroll && this.props.onScroll(cm.getScrollInfo());\n\t},\n\tcodemirrorValueChanged: function codemirrorValueChanged(doc, change) {\n\t\tif (this.props.onChange && change.origin !== 'setValue') {\n\t\t\tthis.props.onChange(doc.getValue(), change);\n\t\t}\n\t},\n\trender: function render() {\n\t\tvar _this = this;\n\n\t\tvar editorClassName = className('ReactCodeMirror', this.state.isFocused ? 'ReactCodeMirror--focused' : null, this.props.className);\n\t\treturn React.createElement(\n\t\t\t'div',\n\t\t\t{ className: editorClassName },\n\t\t\tReact.createElement('textarea', {\n\t\t\t\tref: function (ref) {\n\t\t\t\t\treturn _this.textareaNode = ref;\n\t\t\t\t},\n\t\t\t\tname: this.props.name || this.props.path,\n\t\t\t\tdefaultValue: this.props.value,\n\t\t\t\tautoComplete: 'off',\n\t\t\t\tautoFocus: this.props.autoFocus\n\t\t\t})\n\t\t);\n\t}\n});\n\nmodule.exports = CodeMirror;"]},"metadata":{},"sourceType":"script"}