{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zacha\\\\Desktop\\\\opencode-frontend\\\\src\\\\components\\\\UserLoginForm.js\";\nimport React, { useState } from \"react\";\nimport \"./QuestionList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class QuestionsList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      questions: null,\n      questionsLength: null\n    };\n  }\n\n  async componentDidMount() {// const FETCH_URL = \"http://localhost:8080/api/v1/question\"\n    // const response = await fetch(FETCH_URL)\n    // const fetchedData = await response.json()\n    // const data = []\n    // for(let value of fetchedData) {\n    //     var obj = {Title: value.name, Difficulty: value.difficulty, Author: value.author}\n    //     data.push(obj)\n    // }\n    // this.setState({questions: data, loading: false, questionsLength: data.length})\n    // //Initialize the first button to be highlighted, since click on the home page will always load the first page of the questionList\n    // document.getElementById('pagination-button-1').style.color = 'green'\n  }\n\n  render() {\n    var usernameForm = window.document.getElementById('username');\n    var passwordForm = window.document.getElementById('password');\n\n    function loginHandler(username, password) {\n      console.log(username + \" \" + password);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 60\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          name: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 72\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 60\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"password\",\n          name: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 72\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => loginHandler(usernameForm.value, passwordForm.value),\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Zacha/Desktop/opencode-frontend/src/components/UserLoginForm.js"],"names":["React","useState","QuestionsList","Component","state","loading","questions","questionsLength","componentDidMount","render","usernameForm","window","document","getElementById","passwordForm","loginHandler","username","password","console","log","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,oBAAP;;AAEA,eAAe,MAAMC,aAAN,SAA4BF,KAAK,CAACG,SAAlC,CAA4C;AAAA;AAAA;AAAA,SACvDC,KADuD,GAC/C;AACJC,MAAAA,OAAO,EAAE,IADL;AAEJC,MAAAA,SAAS,EAAE,IAFP;AAGJC,MAAAA,eAAe,EAAE;AAHb,KAD+C;AAAA;;AAOhC,QAAjBC,iBAAiB,GAAG,CACtB;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIC,YAAY,GAAGC,MAAM,CAACC,QAAP,CAAgBC,cAAhB,CAA+B,UAA/B,CAAnB;AACA,QAAIC,YAAY,GAAGH,MAAM,CAACC,QAAP,CAAgBC,cAAhB,CAA+B,UAA/B,CAAnB;;AAEA,aAASE,YAAT,CAAsBC,QAAtB,EAAgCC,QAAhC,EAA0C;AACtCC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,GAAG,GAAX,GAAiBC,QAA7B;AACH;;AAED,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAM,QAAA,EAAE,EAAC,YAAT;AAAA,gCACI;AAAO,UAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAC2C;AAAA;AAAA;AAAA;AAAA,gBAD3C,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAC,UAAtB;AAAiC,UAAA,IAAI,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAEuD;AAAA;AAAA;AAAA;AAAA,gBAFvD,eAGI;AAAO,UAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAG2C;AAAA;AAAA;AAAA;AAAA,gBAH3C,eAII;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAC,UAAtB;AAAiC,UAAA,IAAI,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAIuD;AAAA;AAAA;AAAA;AAAA,gBAJvD;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAQ,QAAA,OAAO,EAAE,MAAMF,YAAY,CAACL,YAAY,CAACU,KAAd,EAAqBN,YAAY,CAACM,KAAlC,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AA9CsD","sourcesContent":["import React, { useState } from \"react\";\nimport \"./QuestionList.css\";\n\nexport default class QuestionsList extends React.Component {\n    state = {\n        loading: true,\n        questions: null,\n        questionsLength: null\n    }\n\n    async componentDidMount() {\n        // const FETCH_URL = \"http://localhost:8080/api/v1/question\"\n\n        // const response = await fetch(FETCH_URL)\n\n        // const fetchedData = await response.json()\n\n        // const data = []\n\n        // for(let value of fetchedData) {\n        //     var obj = {Title: value.name, Difficulty: value.difficulty, Author: value.author}\n        //     data.push(obj)\n        // }\n\n        // this.setState({questions: data, loading: false, questionsLength: data.length})\n\n        // //Initialize the first button to be highlighted, since click on the home page will always load the first page of the questionList\n        // document.getElementById('pagination-button-1').style.color = 'green'\n    }\n\n    render() {\n        var usernameForm = window.document.getElementById('username')\n        var passwordForm = window.document.getElementById('password')\n\n        function loginHandler(username, password) {\n            console.log(username + \" \" + password)\n        }\n\n        return(\n            <div className=\"login-div\">\n                <form id=\"login-form\">\n                    <label for=\"username\">Username:</label><br />\n                    <input type=\"text\" id=\"username\" name=\"username\" /><br />\n                    <label for=\"password\">Password:</label><br />\n                    <input type=\"text\" id=\"password\" name=\"password\" /><br />\n                </form>\n                <button onClick={() => loginHandler(usernameForm.value, passwordForm.value)}>submit</button>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}