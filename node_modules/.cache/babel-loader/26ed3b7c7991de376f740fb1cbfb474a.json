{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zacha\\\\Desktop\\\\opencode-frontend\\\\src\\\\components\\\\CodeMirrorEditor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\nimport 'codemirror/*';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodeMirrorEditor = /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const [editorText, changeEditorText] = useState(props.code);\n\n  const editor = /*#__PURE__*/_jsxDEV(CodeMirror, {\n    value: editorText,\n    options: {\n      theme: 'default',\n      keyMap: 'sublime',\n      mode: 'java',\n      lineNumbers: true,\n      tabSize: 2,\n      styleActiveLine: true,\n      matchBrackets: true,\n      autoCloseBrackets: true\n    },\n    onBeforeChange: (editor, data, value) => {\n      changeEditorText(value);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 20\n  }, this);\n\n  useImperativeHandle(ref, () => ({\n    updateEditorText(text) {\n      changeEditorText(text);\n    },\n\n    getEditorText() {\n      return editorText;\n    }\n\n  }));\n  return editor;\n}, \"z7bz8h4ZNIKP72t1ZyHNJ9esRvY=\", false, function () {\n  return [useImperativeHandle];\n}));\n_c2 = CodeMirrorEditor;\nexport default CodeMirrorEditor;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CodeMirrorEditor$forwardRef\");\n$RefreshReg$(_c2, \"CodeMirrorEditor\");","map":{"version":3,"sources":["C:/Users/Zacha/Desktop/opencode-frontend/src/components/CodeMirrorEditor.js"],"names":["React","useState","forwardRef","useImperativeHandle","Controlled","CodeMirror","CodeMirrorEditor","props","ref","editorText","changeEditorText","code","editor","theme","keyMap","mode","lineNumbers","tabSize","styleActiveLine","matchBrackets","autoCloseBrackets","data","value","updateEditorText","text","getEditorText"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,mBAAtC,QAAiE,OAAjE;AACA,SAAQC,UAAU,IAAIC,UAAtB,QAAuC,mBAAvC;AACA,OAAO,cAAP;;AAEA,MAAMC,gBAAgB,gBAAGJ,UAAU,SAAC,CAACK,KAAD,EAAQC,GAAR,KAAgB;AAAA;;AAChD,QAAM,CAACC,UAAD,EAAaC,gBAAb,IAAiCT,QAAQ,CAACM,KAAK,CAACI,IAAP,CAA/C;;AAEA,QAAMC,MAAM,gBAAG,QAAC,UAAD;AAAY,IAAA,KAAK,EAAEH,UAAnB;AAA+B,IAAA,OAAO,EAAE;AACnCI,MAAAA,KAAK,EAAE,SAD4B;AAEnCC,MAAAA,MAAM,EAAE,SAF2B;AAGnCC,MAAAA,IAAI,EAAE,MAH6B;AAInCC,MAAAA,WAAW,EAAE,IAJsB;AAKnCC,MAAAA,OAAO,EAAE,CAL0B;AAMnCC,MAAAA,eAAe,EAAE,IANkB;AAOnCC,MAAAA,aAAa,EAAE,IAPoB;AAQnCC,MAAAA,iBAAiB,EAAE;AARgB,KAAxC;AAUC,IAAA,cAAc,EAAE,CAACR,MAAD,EAASS,IAAT,EAAeC,KAAf,KAAyB;AACrCZ,MAAAA,gBAAgB,CAACY,KAAD,CAAhB;AACH;AAZF;AAAA;AAAA;AAAA;AAAA,UAAf;;AAeAnB,EAAAA,mBAAmB,CAACK,GAAD,EAAM,OAAO;AAC5Be,IAAAA,gBAAgB,CAACC,IAAD,EAAO;AACnBd,MAAAA,gBAAgB,CAACc,IAAD,CAAhB;AACH,KAH2B;;AAI5BC,IAAAA,aAAa,GAAG;AACZ,aAAOhB,UAAP;AACH;;AAN2B,GAAP,CAAN,CAAnB;AASA,SACIG,MADJ;AAGH,CA9BkC;AAAA,UAkB/BT,mBAlB+B;AAAA,GAAnC;MAAMG,gB;AAgCN,eAAeA,gBAAf","sourcesContent":["import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport {Controlled as CodeMirror} from \"react-codemirror2\";\nimport 'codemirror/*';\n\nconst CodeMirrorEditor = forwardRef((props, ref) => {\n    const [editorText, changeEditorText] = useState(props.code)\n\n    const editor = <CodeMirror value={editorText} options={{ \n                        theme: 'default', \n                        keyMap: 'sublime', \n                        mode: 'java',\n                        lineNumbers: true,\n                        tabSize: 2,\n                        styleActiveLine: true,\n                        matchBrackets: true,\n                        autoCloseBrackets: true\n                    }}\n                    onBeforeChange={(editor, data, value) => {\n                        changeEditorText(value)\n                    }}\n                    />\n\n    useImperativeHandle(ref, () => ({\n        updateEditorText(text) {\n            changeEditorText(text)\n        },\n        getEditorText() {\n            return editorText\n        }\n    }))\n\n    return(\n        editor\n    )\n})\n\nexport default CodeMirrorEditor"]},"metadata":{},"sourceType":"module"}