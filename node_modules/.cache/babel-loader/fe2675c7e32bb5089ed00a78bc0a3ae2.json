{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zacha\\\\Desktop\\\\opencode-frontend\\\\src\\\\components\\\\QuestionsList.js\";\nimport React from \"react\";\nimport \"./QuestionList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class QuestionsList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      questions: null,\n      displayedQuestions: null,\n      questionsLength: null,\n      currentPage: 1\n    };\n  }\n\n  async componentDidMount() {\n    const data = [];\n\n    if (window.location.href.includes(\"user\")) {\n      const FETCH_URL_ATTEMPTS = \"http://localhost:8080/api/v1/question/user-attempts/1\";\n      const FETCH_URL_COMPLETIONS = \"http://localhost:8080/api/v1/question/user-completions/1\";\n      const attemptsResponse = await fetch(FETCH_URL_ATTEMPTS);\n      const completionsResponse = await fetch(FETCH_URL_COMPLETIONS);\n      const attempsFetchedData = await attemptsResponse.json();\n      const completionsFetchedData = await completionsResponse.json();\n\n      for (let value of completionsFetchedData) {\n        data.push({\n          Title: value.name,\n          Completed: \"True\",\n          Difficulty: value.difficulty,\n          Author: value.author\n        });\n      }\n\n      for (let value of attempsFetchedData) {\n        if (!data.filter(e => e.Title === value.name).length > 0) data.push({\n          Title: value.name,\n          Completed: \"False\",\n          Difficulty: value.difficulty,\n          Author: value.author\n        });\n      }\n    } else if (window.location.href.includes(\"projects\")) {\n      const FETCH_URL = \"http://localhost:8080/api/v1/project\";\n      const response = await fetch(FETCH_URL);\n      const fetchedData = await response.json();\n\n      for (let value of fetchedData) {\n        data.push({\n          Title: value.name,\n          Difficulty: value.projectType,\n          Author: value.author\n        });\n      }\n    } else {\n      const FETCH_URL = \"http://localhost:8080/api/v1/question\";\n      const response = await fetch(FETCH_URL);\n      const fetchedData = await response.json();\n\n      for (let value of fetchedData) {\n        data.push({\n          Title: value.name,\n          Difficulty: value.difficulty,\n          Author: value.author\n        });\n      }\n    }\n\n    var arr = [...data];\n    this.setState({\n      questions: data,\n      loading: false,\n      questionsLength: data.length,\n      displayedQuestions: arr.splice(0, 5)\n    }); //Initialize the first button to be highlighted, since click on the home page will always load the first page of the questionList\n    // document.getElementById('pagination-button-1').style.color = 'green'\n  }\n\n  click(item) {\n    this.setState({\n      currentPage: item\n    });\n    const ITEMS_PER_PAGE = 5;\n    var numOfPaginationButtons = Math.floor(1 + this.state.questionsLength / 5);\n    var tempArray = [];\n    var counter = 0;\n\n    for (var i = ITEMS_PER_PAGE * item - ITEMS_PER_PAGE; i < ITEMS_PER_PAGE * item; i++) {\n      if (this.state.questions[i] != undefined) tempArray[counter] = this.state.questions[i];\n      counter++;\n    }\n\n    this.setState({\n      displayedQuestions: tempArray\n    });\n\n    for (var i = 1; i <= numOfPaginationButtons; i++) {\n      document.getElementById('pagination-button-' + i).style.color = \"white\";\n    }\n\n    document.getElementById('pagination-button-' + item).style.color = 'green';\n  }\n\n  render() {\n    const ITEMS_PER_PAGE = 5;\n    var numOfPaginationButtons = Math.floor(1 + this.state.questionsLength / 5);\n    var isProjectsPage = window.location.href.includes('projects');\n    var isUserPage = window.location.href.includes('user');\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        cellSpacing: \"0\",\n        className: isUserPage ? 'question-table-user' : 'question-table',\n        style: {\n          height: 'auto',\n          padding: '10px 10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"question-table-header\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"no-background-button\",\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this), isUserPage ? /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"no-background-button\",\n                children: \"Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 40\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"no-background-button\",\n                children: isProjectsPage ? \"Type\" : \"Difficulty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"no-background-button\",\n                children: \"Author\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 44\n          }, this) : Object.values(this.state.displayedQuestions).map((obj, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: index % 2 === 0 ? {\n              \"background-color\": \"#14161a\",\n              height: '100px'\n            } : {\n              height: '100px'\n            },\n            children: Object.values(obj).map((value, index2) => /*#__PURE__*/_jsxDEV(\"td\", {\n              className: isUserPage ? \"q-td-4\" : \"q-td-3\",\n              children: isUserPage ? index2 % 4 === 0 ? /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"question-table-links\",\n                href: \"/question?name=\" + value,\n                children: value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 70\n              }, this) : value : index2 % 3 === 0 ? /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"question-table-links\",\n                href: isProjectsPage ? \"/project?name=\" + value : \"/question?name=\" + value,\n                children: value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 70\n              }, this) : value\n            }, index2, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 41\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: isUserPage ? 'pagination-user' : 'pagination',\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"no-background-button\",\n            onClick: () => {\n              this.state.currentPage === 1 ? this.click(this.state.currentPage) : this.click(this.state.currentPage - 1);\n            },\n            children: '<'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }, this), this.state.loading ? /*#__PURE__*/_jsxDEV(\"li\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 40\n        }, this) : Object.values(this.state.questions).map((obj, index) => index % ITEMS_PER_PAGE === 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"pagination-button-\" + (1 + index / ITEMS_PER_PAGE),\n            className: \"no-background-button\",\n            onClick: () => {\n              this.click(1 + index / ITEMS_PER_PAGE);\n            },\n            children: 1 + index / ITEMS_PER_PAGE\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 63\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 59\n        }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"no-background-button\",\n            onClick: () => {\n              this.state.currentPage === numOfPaginationButtons ? this.click(this.state.currentPage) : this.click(this.state.currentPage + 1);\n            },\n            children: \">\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Zacha/Desktop/opencode-frontend/src/components/QuestionsList.js"],"names":["React","QuestionsList","Component","state","loading","questions","displayedQuestions","questionsLength","currentPage","componentDidMount","data","window","location","href","includes","FETCH_URL_ATTEMPTS","FETCH_URL_COMPLETIONS","attemptsResponse","fetch","completionsResponse","attempsFetchedData","json","completionsFetchedData","value","push","Title","name","Completed","Difficulty","difficulty","Author","author","filter","e","length","FETCH_URL","response","fetchedData","projectType","arr","setState","splice","click","item","ITEMS_PER_PAGE","numOfPaginationButtons","Math","floor","tempArray","counter","i","undefined","document","getElementById","style","color","render","isProjectsPage","isUserPage","height","padding","Object","values","map","obj","index","index2"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./QuestionList.css\";\n\nexport default class QuestionsList extends React.Component {\n    state = {\n        loading: true,\n        questions: null,\n        displayedQuestions: null,\n        questionsLength: null,\n        currentPage: 1\n    }\n\n    async componentDidMount() {\n        const data = []\n\n        if(window.location.href.includes(\"user\")) {\n            const FETCH_URL_ATTEMPTS = \"http://localhost:8080/api/v1/question/user-attempts/1\"\n            const FETCH_URL_COMPLETIONS = \"http://localhost:8080/api/v1/question/user-completions/1\"\n\n            const attemptsResponse = await fetch(FETCH_URL_ATTEMPTS)\n            const completionsResponse = await fetch(FETCH_URL_COMPLETIONS)\n\n            const attempsFetchedData = await attemptsResponse.json()\n            const completionsFetchedData = await completionsResponse.json()\n\n            for(let value of completionsFetchedData) {\n                data.push({Title: value.name, Completed: \"True\", Difficulty: value.difficulty, Author: value.author})\n            }\n            for(let value of attempsFetchedData) {\n                if(!data.filter(e => e.Title === value.name).length > 0)\n                    data.push({Title: value.name, Completed: \"False\", Difficulty: value.difficulty, Author: value.author})\n            }\n        }\n        else if(window.location.href.includes(\"projects\")) {\n            const FETCH_URL = \"http://localhost:8080/api/v1/project\"\n\n            const response = await fetch(FETCH_URL)\n\n            const fetchedData = await response.json()\n\n            for(let value of fetchedData) {\n                data.push({Title: value.name, Difficulty: value.projectType, Author: value.author})\n            }\n        }\n        else {\n            const FETCH_URL = \"http://localhost:8080/api/v1/question\"\n\n            const response = await fetch(FETCH_URL)\n\n            const fetchedData = await response.json()\n\n            for(let value of fetchedData) {\n                data.push({Title: value.name, Difficulty: value.difficulty, Author: value.author})\n            }\n        }\n\n        var arr = [...data]\n\n        this.setState({questions: data, loading: false, questionsLength: data.length, displayedQuestions: arr.splice(0,5)})\n\n        //Initialize the first button to be highlighted, since click on the home page will always load the first page of the questionList\n        // document.getElementById('pagination-button-1').style.color = 'green'\n    }\n\n    click(item) {\n        this.setState({currentPage: item})\n\n        const ITEMS_PER_PAGE = 5\n\n        var numOfPaginationButtons = Math.floor(1 + this.state.questionsLength/5)\n        var tempArray = []\n        var counter = 0\n\n        for(var i = (ITEMS_PER_PAGE*item)-ITEMS_PER_PAGE; i < ITEMS_PER_PAGE * item; i++) {\n            if(this.state.questions[i] != undefined)\n                tempArray[counter] = this.state.questions[i]\n            counter++\n        }\n\n        this.setState({displayedQuestions: tempArray})\n        \n        for(var i = 1; i <= numOfPaginationButtons; i++) {\n            document.getElementById('pagination-button-' + i).style.color = \"white\"\n        }\n\n        document.getElementById('pagination-button-' + item).style.color = 'green'\n    }\n\n    render() {\n        const ITEMS_PER_PAGE = 5\n\n        var numOfPaginationButtons = Math.floor(1 + this.state.questionsLength/5)\n        var isProjectsPage = window.location.href.includes('projects')\n        var isUserPage = window.location.href.includes('user')\n\n        return(\n            <>\n            <table cellSpacing=\"0\" className={isUserPage ? 'question-table-user' : 'question-table'} style={{height: 'auto', padding: '10px 10px'}}>\n                <h1>Text</h1>\n                <thead className='question-table-header'>\n                    <tr>\n                        <th><button className=\"no-background-button\">Title</button></th>\n                        { isUserPage ? <th><button className=\"no-background-button\">Completed</button></th> : <></>}\n                        <th><button className=\"no-background-button\">{isProjectsPage ? \"Type\" : \"Difficulty\"}</button></th>\n                        <th><button className=\"no-background-button\">Author</button></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    { this.state.loading ? <div>loading...</div> :\n                    Object.values(this.state.displayedQuestions).map((obj, index) => (\n                        <tr key={index} style={(index % 2 === 0) ? {\"background-color\": \"#14161a\", height: '100px'} : {height: '100px'}}>\n                            {\n                                Object.values(obj).map((value, index2) => (\n                                        <td className={isUserPage ? \"q-td-4\" : \"q-td-3\"} key={index2}>\n                                            { isUserPage ? \n                                                (index2 % 4 === 0) ? <a className=\"question-table-links\" href={ \"/question?name=\" + value }>{value}</a> : value \n                                            : \n                                                (index2 % 3 === 0) ? <a className=\"question-table-links\" href={ isProjectsPage ? \"/project?name=\" + value : \"/question?name=\" + value }>{value}</a> : value \n                                            }\n                                        </td>\n                                ))\n                            }\n                        </tr>\n                    ))\n                    }\n                </tbody>\n            </table>\n            <ul className={isUserPage ? 'pagination-user' : 'pagination'}>\n                <li><button className=\"no-background-button\" onClick={() => {(this.state.currentPage === 1) ? this.click(this.state.currentPage) : this.click(this.state.currentPage - 1)}}>{'<'}</button></li>\n                { this.state.loading ? <li></li> : \n                    Object.values(this.state.questions).map((obj,index) => (\n                        (index % ITEMS_PER_PAGE === 0) && <li><button id={\"pagination-button-\" + (1 + index/ITEMS_PER_PAGE)} className=\"no-background-button\" onClick={() => {this.click(1 + index/ITEMS_PER_PAGE)}}>{1 + index/ITEMS_PER_PAGE}</button></li>\n                    ))\n                }\n                <li><button className=\"no-background-button\" onClick={() => {(this.state.currentPage === numOfPaginationButtons) ? this.click(this.state.currentPage) : this.click(this.state.currentPage + 1)}}>{\">\"}</button></li>\n            </ul>\n        </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}