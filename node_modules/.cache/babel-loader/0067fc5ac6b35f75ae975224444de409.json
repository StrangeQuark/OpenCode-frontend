{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zacha\\\\Desktop\\\\opencode-frontend\\\\src\\\\components\\\\UserLoginForm.js\";\nimport React, { useState } from \"react\";\nimport \"./QuestionList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class QuestionsList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      questions: null,\n      questionsLength: null\n    };\n  }\n\n  async componentDidMount() {\n    // const FETCH_URL = \"http://localhost:8080/api/v1/question\"\n    // const response = await fetch(FETCH_URL)\n    // const fetchedData = await response.json()\n    // const data = []\n    // for(let value of fetchedData) {\n    //     var obj = {Title: value.name, Difficulty: value.difficulty, Author: value.author}\n    //     data.push(obj)\n    // }\n    // this.setState({questions: data, loading: false, questionsLength: data.length})\n    // //Initialize the first button to be highlighted, since click on the home page will always load the first page of the questionList\n    // document.getElementById('pagination-button-1').style.color = 'green'\n    //Since we are using a button outside of the form to handle the login attempt\n    //let's listen to the username and password input fields for if the user\n    //presses the enter key, and if so we can cann the loginHandler function\n    var usernameInput = document.getElementById('username');\n    var passwordInput = document.getElementById('password');\n    usernameInput.addEventListener('keyup', function onEvent(e) {\n      if (e.code === \"Enter\") {\n        loginHandler(window.document.getElementById('username').value, window.document.getElementById('password').value);\n      }\n    });\n    passwordInput.addEventListener('keyup', function onEvent(e) {\n      if (e.code === \"Enter\") {\n        loginHandler(window.document.getElementById('username').value, window.document.getElementById('password').value);\n      }\n    });\n  }\n\n  render() {\n    function loginHandler(username, password) {\n      var loginJSON = {\n        \"username\": username,\n        \"password\": password\n      };\n      fetch('http://localhost:8080/api/v1/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(loginJSON)\n      }).then(response => response.json().then(function (json) {\n        if (json) {\n          localStorage.setItem('username', username);\n          console.log(localStorage.getItem('username') + \" has logged in\");\n        } else {\n          console.log(\"login was unsuccessful\");\n        }\n      }));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 60\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          name: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 72\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 60\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 76\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => loginHandler(window.document.getElementById('username').value, window.document.getElementById('password').value),\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Zacha/Desktop/opencode-frontend/src/components/UserLoginForm.js"],"names":["React","useState","QuestionsList","Component","state","loading","questions","questionsLength","componentDidMount","usernameInput","document","getElementById","passwordInput","addEventListener","onEvent","e","code","loginHandler","window","value","render","username","password","loginJSON","fetch","method","headers","body","JSON","stringify","then","response","json","localStorage","setItem","console","log","getItem"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./QuestionList.css\";\n\nexport default class QuestionsList extends React.Component {\n    state = {\n        loading: true,\n        questions: null,\n        questionsLength: null\n    }\n\n    async componentDidMount() {\n        // const FETCH_URL = \"http://localhost:8080/api/v1/question\"\n\n        // const response = await fetch(FETCH_URL)\n\n        // const fetchedData = await response.json()\n\n        // const data = []\n\n        // for(let value of fetchedData) {\n        //     var obj = {Title: value.name, Difficulty: value.difficulty, Author: value.author}\n        //     data.push(obj)\n        // }\n\n        // this.setState({questions: data, loading: false, questionsLength: data.length})\n\n        // //Initialize the first button to be highlighted, since click on the home page will always load the first page of the questionList\n        // document.getElementById('pagination-button-1').style.color = 'green'\n\n        //Since we are using a button outside of the form to handle the login attempt\n        //let's listen to the username and password input fields for if the user\n        //presses the enter key, and if so we can cann the loginHandler function\n        var usernameInput = document.getElementById('username')\n        var passwordInput = document.getElementById('password')\n\n        usernameInput.addEventListener('keyup', function onEvent(e) {\n            if(e.code === \"Enter\") {\n                loginHandler(window.document.getElementById('username').value, window.document.getElementById('password').value)\n            }\n        })\n        passwordInput.addEventListener('keyup', function onEvent(e) {\n            if(e.code === \"Enter\") {\n                loginHandler(window.document.getElementById('username').value, window.document.getElementById('password').value)\n            }\n        })\n    }\n\n    render() {\n        function loginHandler(username, password) {\n            var loginJSON = {\"username\": username, \"password\": password}\n\n            fetch('http://localhost:8080/api/v1/login', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(loginJSON)\n                }).then(response => response.json().then(\n                    function (json) {\n                        if(json) {\n                            localStorage.setItem('username', username)\n                            console.log(localStorage.getItem('username') + \" has logged in\")\n                        }\n                        else {\n                            console.log(\"login was unsuccessful\")\n                        }\n                    }\n                ))\n        }\n\n        return(\n            <div className=\"login-div\">\n                <form id=\"login-form\">\n                    <label for=\"username\">Username:</label><br />\n                    <input type=\"text\" id=\"username\" name=\"username\" /><br />\n                    <label for=\"password\">Password:</label><br />\n                    <input type=\"password\" id=\"password\" name=\"password\" /><br />\n                </form>\n                <button onClick={() => loginHandler(window.document.getElementById('username').value, window.document.getElementById('password').value)}>submit</button>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}