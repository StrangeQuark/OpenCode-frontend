{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zacha\\\\Desktop\\\\opencode-frontend\\\\src\\\\components\\\\QuestionsList.js\";\nimport React from \"react\";\nimport \"./QuestionList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class QuestionsList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      questions: null,\n      questionsLength: null\n    };\n  }\n\n  async componentDidMount() {\n    const FETCH_URL = \"http://localhost:8080/api/v1/question\";\n    const response = await fetch(FETCH_URL);\n    const fetchedData = await response.json();\n    const data = [];\n\n    for (let value of fetchedData) {\n      var obj = {\n        Title: value.name,\n        Difficulty: value.difficulty,\n        Author: value.author\n      };\n      data.push(obj);\n    }\n\n    this.setState({\n      questions: data,\n      loading: false,\n      questionsLength: data.length\n    });\n  }\n\n  render() {\n    var currentPage = 1;\n\n    function click(item) {\n      currentPage = item;\n      console.log(currentPage);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        cellSpacing: \"0\",\n        className: \"question-table\",\n        style: {\n          width: '80%',\n          height: 'auto',\n          padding: '10px 10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"question-table-header\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Difficulty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Author\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 44\n          }, this) : Object.values(this.state.questions).map((obj, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: index % 2 == 0 ? {\n              \"background-color\": \"#14161a\",\n              height: '100px'\n            } : {\n              height: '100px'\n            },\n            children: Object.values(obj).map((value, index2) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: index2 % 3 == 0 ? /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"question-table-links\",\n                href: \"/question?name=\" + value,\n                children: value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 69\n              }, this) : value\n            }, index2, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 41\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              currentPage == 1 ? click(1) : click(currentPage - 1);\n            },\n            children: '<'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), this.state.loading ? /*#__PURE__*/_jsxDEV(\"li\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 40\n        }, this) : Object.values(this.state.questions).map((obj, index) => index % 2 == 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              click(1 + index / 2);\n            },\n            children: 1 + index / 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 45\n        }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              currentPage == 3 ? console.log(1 + this.state.questionsLength / 2) : click(currentPage + 1);\n            },\n            children: \">\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Zacha/Desktop/opencode-frontend/src/components/QuestionsList.js"],"names":["React","QuestionsList","Component","state","loading","questions","questionsLength","componentDidMount","FETCH_URL","response","fetch","fetchedData","json","data","value","obj","Title","name","Difficulty","difficulty","Author","author","push","setState","length","render","currentPage","click","item","console","log","width","height","padding","Object","values","map","index","index2"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./QuestionList.css\";\n\nexport default class QuestionsList extends React.Component {\n    state = {\n        loading: true,\n        questions: null,\n        questionsLength: null\n    }\n\n    async componentDidMount() {\n        const FETCH_URL = \"http://localhost:8080/api/v1/question\"\n\n        const response = await fetch(FETCH_URL)\n\n        const fetchedData = await response.json()\n\n        const data = []\n\n        for(let value of fetchedData) {\n            var obj = {Title: value.name, Difficulty: value.difficulty, Author: value.author}\n            data.push(obj)\n        }\n\n        this.setState({questions: data, loading: false, questionsLength: data.length})\n    }\n\n    render() {\n\n        var currentPage = 1\n\n        function click(item) {\n            currentPage = item\n            console.log(currentPage)\n        }\n\n        return(\n            <>\n            <table cellSpacing=\"0\" className='question-table' style={{width: '80%', height: 'auto', padding: '10px 10px'}}>\n                <thead className='question-table-header'>\n                    <tr>\n                        <th>Title</th>\n                        <th>Difficulty</th>\n                        <th>Author</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    { this.state.loading ? <div>loading...</div> :\n                    Object.values(this.state.questions).map((obj, index) => (\n                        <tr key={index} style={(index % 2 == 0) ? {\"background-color\": \"#14161a\", height: '100px'} : {height: '100px'}}>\n                            {\n                                Object.values(obj).map((value, index2) => (\n                                        <td key={index2}>\n                                            { \n                                                (index2 % 3 == 0) ? <a className=\"question-table-links\" href={\"/question?name=\" + value}>{value}</a> : value \n                                            }\n                                        </td>\n                                ))\n                            }\n                        </tr>\n                    ))\n                    }\n                </tbody>\n            </table>\n            <ul className='pagination'>\n                <li><button onClick={() => {(currentPage == 1) ? click(1) : click(currentPage - 1)}}>{'<'}</button></li>\n                { this.state.loading ? <li></li> : \n                    Object.values(this.state.questions).map((obj,index) => (\n                        (index % 2 == 0) && <li><button onClick={() => {click(1 + index/2)}}>{1 + index/2}</button></li>\n                    ))\n                }\n                <li><button onClick={() => {(currentPage == 3) ? console.log(1 + this.state.questionsLength/2) : click(currentPage + 1)}}>{\">\"}</button></li>\n            </ul>\n        </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}