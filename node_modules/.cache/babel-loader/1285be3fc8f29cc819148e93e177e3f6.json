{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zacha\\\\Desktop\\\\opencode-frontend\\\\src\\\\components\\\\ResetPasswordSearchForm.js\";\nimport React from \"react\";\nimport \"./ResetPassword.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ResetPasswordSearchForm extends React.Component {\n  async componentDidMount() {\n    //Since we are using a button outside of the form to handle the login attempt\n    //let's listen to the username and password input fields for if the user\n    //presses the enter key, and if so we can simulate a button click\n    var usernameInput = document.getElementById('username');\n    usernameInput.addEventListener('keyup', function onEvent(e) {\n      if (e.code === \"Enter\") {\n        document.getElementById('submit-button').click();\n      }\n    }); //Change the size of the request-form\n\n    var requestForm = document.getElementById('request-form');\n    requestForm.style.width = window.innerWidth / 8 + \"px\";\n    requestForm.style.height = window.innerHeight / 4 + \"px\"; //Move the request-div to the center of the screen once the width and height have been rendered\n\n    var requestDiv = document.getElementById('request-div');\n    requestDiv.style.marginTop = \"-\" + requestDiv.offsetHeight / 2 + \"px\";\n    requestDiv.style.marginLeft = \"-\" + requestDiv.offsetWidth / 2 + \"px\";\n  }\n\n  render() {\n    function requestHandler(username) {\n      var noUsernameMessage = document.getElementById('no-username-message'); //Reset all the login error messages when the user attempts a login\n\n      noUsernameMessage.hidden = true; //If the user enters nothing, do nothing\n\n      if (username === \"\") {\n        noUsernameMessage.hidden = false;\n        return;\n      }\n\n      fetch('http://localhost:8080/api/v1/password-reset', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(username)\n      }).then(response => response.text().then(function (text) {\n        if (text === \"Sorry, we could not find your account\") {\n          noUsernameMessage.hidden = false;\n        } else {\n          if (document.getElementById('remember-me-checkbox').checked) {\n            localStorage.setItem('username', text);\n          } else {\n            localStorage.clear();\n            sessionStorage.setItem('username', text);\n          } //Go back to the homwe page upon successful login\n\n\n          window.location.href = \"/\";\n        }\n      }));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"request-div\",\n      className: \"request-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"white\"\n        },\n        children: \"Reset password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"100px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          id: \"no-username-message\",\n          hidden: \"true\",\n          style: {\n            color: \"red\"\n          },\n          children: \"Sorry, we could not find your account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"request-form\",\n        className: \"request-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"username\",\n          children: \"Username or email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 69\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: \"20px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          name: \"username\",\n          placeholder: \"Type your username or email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 113\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        id: \"submit-button\",\n        onClick: () => requestHandler(window.document.getElementById('username').value),\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Zacha/Desktop/opencode-frontend/src/components/ResetPasswordSearchForm.js"],"names":["React","ResetPasswordSearchForm","Component","componentDidMount","usernameInput","document","getElementById","addEventListener","onEvent","e","code","click","requestForm","style","width","window","innerWidth","height","innerHeight","requestDiv","marginTop","offsetHeight","marginLeft","offsetWidth","render","requestHandler","username","noUsernameMessage","hidden","fetch","method","headers","body","JSON","stringify","then","response","text","checked","localStorage","setItem","clear","sessionStorage","location","href","color","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./ResetPassword.css\";\n\nexport default class ResetPasswordSearchForm extends React.Component {\n    async componentDidMount() {\n        //Since we are using a button outside of the form to handle the login attempt\n        //let's listen to the username and password input fields for if the user\n        //presses the enter key, and if so we can simulate a button click\n        var usernameInput = document.getElementById('username')\n\n        usernameInput.addEventListener('keyup', function onEvent(e) {\n            if(e.code === \"Enter\") {\n                document.getElementById('submit-button').click()\n            }\n        })\n\n        //Change the size of the request-form\n        var requestForm = document.getElementById('request-form')\n\n        requestForm.style.width = (window.innerWidth / 8) + \"px\";\n        requestForm.style.height = (window.innerHeight / 4) + \"px\";\n\n        //Move the request-div to the center of the screen once the width and height have been rendered\n        var requestDiv = document.getElementById('request-div')\n\n        requestDiv.style.marginTop = \"-\" + requestDiv.offsetHeight / 2 + \"px\"\n        requestDiv.style.marginLeft = \"-\" + requestDiv.offsetWidth / 2 + \"px\"\n    }\n\n    render() {\n        function requestHandler(username) {\n            var noUsernameMessage = document.getElementById('no-username-message')\n\n            //Reset all the login error messages when the user attempts a login\n            noUsernameMessage.hidden = true\n\n            //If the user enters nothing, do nothing\n            if(username === \"\") {\n                noUsernameMessage.hidden = false\n                return\n            }\n\n            fetch('http://localhost:8080/api/v1/password-reset', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(username)\n                }).then(response => response.text().then(\n                    function (text) {\n                        if(text === \"Sorry, we could not find your account\") {\n                            noUsernameMessage.hidden = false\n                        }\n                        else {\n                            if(document.getElementById('remember-me-checkbox').checked) {\n                                localStorage.setItem('username', text)\n                            }\n                            else {\n                                localStorage.clear()\n                                sessionStorage.setItem('username', text)\n                            }\n                            //Go back to the homwe page upon successful login\n                            window.location.href=\"/\";\n                        }\n                    }\n                ))\n        }\n\n        return(\n            <div id=\"request-div\" className=\"request-div\">\n                <h1 style={{color: \"white\"}}>Reset password</h1>\n                <div style={{height: \"100px\"}} >\n                    <b id=\"no-username-message\" hidden=\"true\" style={{color: \"red\"}}>Sorry, we could not find your account</b>\n                </div>\n                <form id=\"request-form\" className=\"request-form\">\n                    <label for=\"username\">Username or email:</label><br />\n                    <div style={{height: \"20px\"}} />\n                    <input type=\"text\" id=\"username\" name=\"username\" placeholder=\"Type your username or email\"/><hr />\n                </form>\n                <button className=\"submit-button\" id='submit-button' onClick={() => requestHandler(window.document.getElementById('username').value)}>SUBMIT</button>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}