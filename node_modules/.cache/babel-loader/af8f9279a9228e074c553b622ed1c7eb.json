{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zacha\\\\Desktop\\\\opencode-frontend\\\\src\\\\components\\\\ResetPasswordSearchForm.js\";\nimport React from \"react\";\nimport \"./ResetPassword.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class ResetPasswordSearchForm extends React.Component {\n  async componentDidMount() {\n    //Since we are using a button outside of the form to handle the login attempt\n    //let's listen to the username and password input fields for if the user\n    //presses the enter key, and if so we can simulate a button click\n    var usernameInput = document.getElementById('username');\n    usernameInput.addEventListener('keyup', function onEvent(e) {\n      if (e.code === \"Enter\") {\n        document.getElementById('submit-button').click();\n      }\n    }); //Change the size of the request-form\n\n    var requestForm = document.getElementById('request-form');\n    requestForm.style.width = window.innerWidth / 8 + \"px\";\n    requestForm.style.height = window.innerHeight / 4 + \"px\"; //Move the request-div to the center of the screen once the width and height have been rendered\n\n    var requestDiv = document.getElementById('request-div');\n    requestDiv.style.marginTop = \"-\" + requestDiv.offsetHeight / 2 + \"px\";\n    requestDiv.style.marginLeft = \"-\" + requestDiv.offsetWidth / 2 + \"px\";\n  }\n\n  render() {\n    function requestHandler(username) {\n      var noUsernameMessage = document.getElementById('no-username-message'); //Reset all the login error messages when the user attempts a login\n\n      noUsernameMessage.hidden = true; //If the user enters nothing, do nothing\n\n      if (username === \"\") {\n        noUsernameMessage.hidden = false;\n        return;\n      }\n\n      fetch('http://localhost:8080/api/v1/password-reset', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(username)\n      }).then(response => response.text().then(function (text) {\n        if (text === \"Sorry, we could not find your account\") {\n          noUsernameMessage.hidden = false;\n        } else {\n          document.getElementById('request-success-text-field').innerHTML = text;\n          document.getElementById('request-div').hidden = true;\n          document.getElementById('request-success-div').hidden = false;\n        }\n      }));\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"request-div\",\n        className: \"request-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            color: \"white\"\n          },\n          children: \"Reset password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: \"100px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            id: \"no-username-message\",\n            hidden: \"true\",\n            style: {\n              color: \"red\"\n            },\n            children: \"Sorry, we could not find your account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"request-form\",\n          className: \"request-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"username\",\n            children: \"Username or email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 69\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: \"20px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            name: \"username\",\n            placeholder: \"Type your username or email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 113\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-button\",\n          id: \"submit-button\",\n          onClick: () => requestHandler(window.document.getElementById('username').value),\n          children: \"SUBMIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"request-success-div\",\n        hidden: \"true\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"request-success-text-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Zacha/Desktop/opencode-frontend/src/components/ResetPasswordSearchForm.js"],"names":["React","ResetPasswordSearchForm","Component","componentDidMount","usernameInput","document","getElementById","addEventListener","onEvent","e","code","click","requestForm","style","width","window","innerWidth","height","innerHeight","requestDiv","marginTop","offsetHeight","marginLeft","offsetWidth","render","requestHandler","username","noUsernameMessage","hidden","fetch","method","headers","body","JSON","stringify","then","response","text","innerHTML","color","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./ResetPassword.css\";\n\nexport default class ResetPasswordSearchForm extends React.Component {\n    async componentDidMount() {\n        //Since we are using a button outside of the form to handle the login attempt\n        //let's listen to the username and password input fields for if the user\n        //presses the enter key, and if so we can simulate a button click\n        var usernameInput = document.getElementById('username')\n\n        usernameInput.addEventListener('keyup', function onEvent(e) {\n            if(e.code === \"Enter\") {\n                document.getElementById('submit-button').click()\n            }\n        })\n\n        //Change the size of the request-form\n        var requestForm = document.getElementById('request-form')\n\n        requestForm.style.width = (window.innerWidth / 8) + \"px\";\n        requestForm.style.height = (window.innerHeight / 4) + \"px\";\n\n        //Move the request-div to the center of the screen once the width and height have been rendered\n        var requestDiv = document.getElementById('request-div')\n\n        requestDiv.style.marginTop = \"-\" + requestDiv.offsetHeight / 2 + \"px\"\n        requestDiv.style.marginLeft = \"-\" + requestDiv.offsetWidth / 2 + \"px\"\n    }\n\n    render() {\n        function requestHandler(username) {\n            var noUsernameMessage = document.getElementById('no-username-message')\n\n            //Reset all the login error messages when the user attempts a login\n            noUsernameMessage.hidden = true\n\n            //If the user enters nothing, do nothing\n            if(username === \"\") {\n                noUsernameMessage.hidden = false\n                return\n            }\n\n            fetch('http://localhost:8080/api/v1/password-reset', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(username)\n                }).then(response => response.text().then(\n                    function (text) {\n                        if(text === \"Sorry, we could not find your account\") {\n                            noUsernameMessage.hidden = false\n                        }\n                        else {\n                            document.getElementById('request-success-text-field').innerHTML = text\n                            document.getElementById('request-div').hidden = true\n                            document.getElementById('request-success-div').hidden = false\n                        }\n                    }\n                ))\n        }\n\n        return(\n            <>\n            <div id=\"request-div\" className=\"request-div\">\n                <h1 style={{color: \"white\"}}>Reset password</h1>\n                <div style={{height: \"100px\"}} >\n                    <b id=\"no-username-message\" hidden=\"true\" style={{color: \"red\"}}>Sorry, we could not find your account</b>\n                </div>\n                <form id=\"request-form\" className=\"request-form\">\n                    <label for=\"username\">Username or email:</label><br />\n                    <div style={{height: \"20px\"}} />\n                    <input type=\"text\" id=\"username\" name=\"username\" placeholder=\"Type your username or email\"/><hr />\n                </form>\n                <button className=\"submit-button\" id='submit-button' onClick={() => requestHandler(window.document.getElementById('username').value)}>SUBMIT</button>\n            </div>\n            <div id=\"request-success-div\" hidden=\"true\">\n                <p id=\"request-success-text-field\"></p>\n            </div>\n            </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}